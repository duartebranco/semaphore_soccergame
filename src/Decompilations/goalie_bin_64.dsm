;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;;
;; Decompilation date: 2024-12-18 10:30:30
;; Architecture: x86
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x1000 -- 0x101b
0x1000:   f3 0f 1e fa                  	endbr64 
0x1004:   48 83 ec 08                  	sub rsp, 8
0x1008:   48 8b 05 d9 3f 00 00         	mov rax, qword ptr [rip + 0x3fd9]
0x100f:   48 85 c0                     	test rax, rax
0x1012:   74 02                        	je 0x1016 <_init+0x16>
0x1014:   ff d0                        	call rax <__gmon_start__>
0x1016:   48 83 c4 08                  	add rsp, 8
0x101a:   c3                           	ret 
; section: .plt
; data inside code section at 0x1020 -- 0x11d0
0x1020:   ff 35 d2 3e 00 00 f2 ff  25 d3 3e 00 00 0f 1f 00   |.5.>....%.>.....|
0x1030:   f3 0f 1e fa 68 00 00 00  00 f2 e9 e1 ff ff ff 90   |....h...........|
0x1040:   f3 0f 1e fa 68 01 00 00  00 f2 e9 d1 ff ff ff 90   |....h...........|
0x1050:   f3 0f 1e fa 68 02 00 00  00 f2 e9 c1 ff ff ff 90   |....h...........|
0x1060:   f3 0f 1e fa 68 03 00 00  00 f2 e9 b1 ff ff ff 90   |....h...........|
0x1070:   f3 0f 1e fa 68 04 00 00  00 f2 e9 a1 ff ff ff 90   |....h...........|
0x1080:   f3 0f 1e fa 68 05 00 00  00 f2 e9 91 ff ff ff 90   |....h...........|
0x1090:   f3 0f 1e fa 68 06 00 00  00 f2 e9 81 ff ff ff 90   |....h...........|
0x10a0:   f3 0f 1e fa 68 07 00 00  00 f2 e9 71 ff ff ff 90   |....h......q....|
0x10b0:   f3 0f 1e fa 68 08 00 00  00 f2 e9 61 ff ff ff 90   |....h......a....|
0x10c0:   f3 0f 1e fa 68 09 00 00  00 f2 e9 51 ff ff ff 90   |....h......Q....|
0x10d0:   f3 0f 1e fa 68 0a 00 00  00 f2 e9 41 ff ff ff 90   |....h......A....|
0x10e0:   f3 0f 1e fa 68 0b 00 00  00 f2 e9 31 ff ff ff 90   |....h......1....|
0x10f0:   f3 0f 1e fa 68 0c 00 00  00 f2 e9 21 ff ff ff 90   |....h......!....|
0x1100:   f3 0f 1e fa 68 0d 00 00  00 f2 e9 11 ff ff ff 90   |....h...........|
0x1110:   f3 0f 1e fa 68 0e 00 00  00 f2 e9 01 ff ff ff 90   |....h...........|
0x1120:   f3 0f 1e fa 68 0f 00 00  00 f2 e9 f1 fe ff ff 90   |....h...........|
0x1130:   f3 0f 1e fa 68 10 00 00  00 f2 e9 e1 fe ff ff 90   |....h...........|
0x1140:   f3 0f 1e fa 68 11 00 00  00 f2 e9 d1 fe ff ff 90   |....h...........|
0x1150:   f3 0f 1e fa 68 12 00 00  00 f2 e9 c1 fe ff ff 90   |....h...........|
0x1160:   f3 0f 1e fa 68 13 00 00  00 f2 e9 b1 fe ff ff 90   |....h...........|
0x1170:   f3 0f 1e fa 68 14 00 00  00 f2 e9 a1 fe ff ff 90   |....h...........|
0x1180:   f3 0f 1e fa 68 15 00 00  00 f2 e9 91 fe ff ff 90   |....h...........|
0x1190:   f3 0f 1e fa 68 16 00 00  00 f2 e9 81 fe ff ff 90   |....h...........|
0x11a0:   f3 0f 1e fa 68 17 00 00  00 f2 e9 71 fe ff ff 90   |....h......q....|
0x11b0:   f3 0f 1e fa 68 18 00 00  00 f2 e9 61 fe ff ff 90   |....h......a....|
0x11c0:   f3 0f 1e fa 68 19 00 00  00 f2 e9 51 fe ff ff 90   |....h......Q....|
; section: .plt.got
; function: function_11d0 at 0x11d0 -- 0x11db
0x11d0:   f3 0f 1e fa                  	endbr64 
0x11d4:   f2 ff 25 1d 3e 00 00         	bnd jmp qword ptr [rip + 0x3e1d] <__cxa_finalize>
; data inside code section at 0x11db -- 0x11e0
0x11db:   0f 1f 44 00 00                                     |..D..           |
; section: .plt.sec
; function: function_11e0 at 0x11e0 -- 0x11eb
0x11e0:   f3 0f 1e fa                  	endbr64 
0x11e4:   f2 ff 25 1d 3d 00 00         	bnd jmp qword ptr [rip + 0x3d1d] <semget>
; data inside code section at 0x11eb -- 0x11f0
0x11eb:   0f 1f 44 00 00                                     |..D..           |
; function: function_11f0 at 0x11f0 -- 0x11fb
0x11f0:   f3 0f 1e fa                  	endbr64 
0x11f4:   f2 ff 25 15 3d 00 00         	bnd jmp qword ptr [rip + 0x3d15] <srandom>
; data inside code section at 0x11fb -- 0x1200
0x11fb:   0f 1f 44 00 00                                     |..D..           |
; function: function_1200 at 0x1200 -- 0x120b
0x1200:   f3 0f 1e fa                  	endbr64 
0x1204:   f2 ff 25 0d 3d 00 00         	bnd jmp qword ptr [rip + 0x3d0d] <strcpy>
; data inside code section at 0x120b -- 0x1210
0x120b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1210 at 0x1210 -- 0x121b
0x1210:   f3 0f 1e fa                  	endbr64 
0x1214:   f2 ff 25 05 3d 00 00         	bnd jmp qword ptr [rip + 0x3d05] <shmdt>
; data inside code section at 0x121b -- 0x1220
0x121b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1220 at 0x1220 -- 0x122b
0x1220:   f3 0f 1e fa                  	endbr64 
0x1224:   f2 ff 25 fd 3c 00 00         	bnd jmp qword ptr [rip + 0x3cfd] <getpid>
; data inside code section at 0x122b -- 0x1230
0x122b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1230 at 0x1230 -- 0x123b
0x1230:   f3 0f 1e fa                  	endbr64 
0x1234:   f2 ff 25 f5 3c 00 00         	bnd jmp qword ptr [rip + 0x3cf5] <fclose>
; data inside code section at 0x123b -- 0x1240
0x123b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1240 at 0x1240 -- 0x124b
0x1240:   f3 0f 1e fa                  	endbr64 
0x1244:   f2 ff 25 ed 3c 00 00         	bnd jmp qword ptr [rip + 0x3ced] <__stack_chk_fail>
; data inside code section at 0x124b -- 0x1250
0x124b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1250 at 0x1250 -- 0x125b
0x1250:   f3 0f 1e fa                  	endbr64 
0x1254:   f2 ff 25 e5 3c 00 00         	bnd jmp qword ptr [rip + 0x3ce5] <setbuf>
; data inside code section at 0x125b -- 0x1260
0x125b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1260 at 0x1260 -- 0x126b
0x1260:   f3 0f 1e fa                  	endbr64 
0x1264:   f2 ff 25 dd 3c 00 00         	bnd jmp qword ptr [rip + 0x3cdd] <__assert_fail>
; data inside code section at 0x126b -- 0x1270
0x126b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1270 at 0x1270 -- 0x127b
0x1270:   f3 0f 1e fa                  	endbr64 
0x1274:   f2 ff 25 d5 3c 00 00         	bnd jmp qword ptr [rip + 0x3cd5] <freopen>
; data inside code section at 0x127b -- 0x1280
0x127b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1280 at 0x1280 -- 0x128b
0x1280:   f3 0f 1e fa                  	endbr64 
0x1284:   f2 ff 25 cd 3c 00 00         	bnd jmp qword ptr [rip + 0x3ccd] <fputc>
; data inside code section at 0x128b -- 0x1290
0x128b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1290 at 0x1290 -- 0x129b
0x1290:   f3 0f 1e fa                  	endbr64 
0x1294:   f2 ff 25 c5 3c 00 00         	bnd jmp qword ptr [rip + 0x3cc5] <fprintf>
; data inside code section at 0x129b -- 0x12a0
0x129b:   0f 1f 44 00 00                                     |..D..           |
; function: function_12a0 at 0x12a0 -- 0x12ab
0x12a0:   f3 0f 1e fa                  	endbr64 
0x12a4:   f2 ff 25 bd 3c 00 00         	bnd jmp qword ptr [rip + 0x3cbd] <strtol>
; data inside code section at 0x12ab -- 0x12b0
0x12ab:   0f 1f 44 00 00                                     |..D..           |
; function: function_12b0 at 0x12b0 -- 0x12bb
0x12b0:   f3 0f 1e fa                  	endbr64 
0x12b4:   f2 ff 25 b5 3c 00 00         	bnd jmp qword ptr [rip + 0x3cb5] <random>
; data inside code section at 0x12bb -- 0x12c0
0x12bb:   0f 1f 44 00 00                                     |..D..           |
; function: function_12c0 at 0x12c0 -- 0x12cb
0x12c0:   f3 0f 1e fa                  	endbr64 
0x12c4:   f2 ff 25 ad 3c 00 00         	bnd jmp qword ptr [rip + 0x3cad] <fflush>
; data inside code section at 0x12cb -- 0x12d0
0x12cb:   0f 1f 44 00 00                                     |..D..           |
; function: function_12d0 at 0x12d0 -- 0x12db
0x12d0:   f3 0f 1e fa                  	endbr64 
0x12d4:   f2 ff 25 a5 3c 00 00         	bnd jmp qword ptr [rip + 0x3ca5] <shmctl>
; data inside code section at 0x12db -- 0x12e0
0x12db:   0f 1f 44 00 00                                     |..D..           |
; function: function_12e0 at 0x12e0 -- 0x12eb
0x12e0:   f3 0f 1e fa                  	endbr64 
0x12e4:   f2 ff 25 9d 3c 00 00         	bnd jmp qword ptr [rip + 0x3c9d] <fopen>
; data inside code section at 0x12eb -- 0x12f0
0x12eb:   0f 1f 44 00 00                                     |..D..           |
; function: function_12f0 at 0x12f0 -- 0x12fb
0x12f0:   f3 0f 1e fa                  	endbr64 
0x12f4:   f2 ff 25 95 3c 00 00         	bnd jmp qword ptr [rip + 0x3c95] <perror>
; data inside code section at 0x12fb -- 0x1300
0x12fb:   0f 1f 44 00 00                                     |..D..           |
; function: function_1300 at 0x1300 -- 0x130b
0x1300:   f3 0f 1e fa                  	endbr64 
0x1304:   f2 ff 25 8d 3c 00 00         	bnd jmp qword ptr [rip + 0x3c8d] <semctl>
; data inside code section at 0x130b -- 0x1310
0x130b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1310 at 0x1310 -- 0x131b
0x1310:   f3 0f 1e fa                  	endbr64 
0x1314:   f2 ff 25 85 3c 00 00         	bnd jmp qword ptr [rip + 0x3c85] <shmat>
; data inside code section at 0x131b -- 0x1320
0x131b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1320 at 0x1320 -- 0x132b
0x1320:   f3 0f 1e fa                  	endbr64 
0x1324:   f2 ff 25 7d 3c 00 00         	bnd jmp qword ptr [rip + 0x3c7d] <shmget>
; data inside code section at 0x132b -- 0x1330
0x132b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1330 at 0x1330 -- 0x133b
0x1330:   f3 0f 1e fa                  	endbr64 
0x1334:   f2 ff 25 75 3c 00 00         	bnd jmp qword ptr [rip + 0x3c75] <semop>
; data inside code section at 0x133b -- 0x1340
0x133b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1340 at 0x1340 -- 0x134b
0x1340:   f3 0f 1e fa                  	endbr64 
0x1344:   f2 ff 25 6d 3c 00 00         	bnd jmp qword ptr [rip + 0x3c6d] <exit>
; data inside code section at 0x134b -- 0x1350
0x134b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1350 at 0x1350 -- 0x135b
0x1350:   f3 0f 1e fa                  	endbr64 
0x1354:   f2 ff 25 65 3c 00 00         	bnd jmp qword ptr [rip + 0x3c65] <fwrite>
; data inside code section at 0x135b -- 0x1360
0x135b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1360 at 0x1360 -- 0x136b
0x1360:   f3 0f 1e fa                  	endbr64 
0x1364:   f2 ff 25 5d 3c 00 00         	bnd jmp qword ptr [rip + 0x3c5d] <ftok>
; data inside code section at 0x136b -- 0x1370
0x136b:   0f 1f 44 00 00                                     |..D..           |
; function: function_1370 at 0x1370 -- 0x137b
0x1370:   f3 0f 1e fa                  	endbr64 
0x1374:   f2 ff 25 55 3c 00 00         	bnd jmp qword ptr [rip + 0x3c55] <usleep>
; data inside code section at 0x137b -- 0x1380
0x137b:   0f 1f 44 00 00                                     |..D..           |
; section: .text
; function: _start at 0x1380 -- 0x13af
0x1380:   f3 0f 1e fa                  	endbr64 
0x1384:   31 ed                        	xor ebp, ebp
0x1386:   49 89 d1                     	mov r9, rdx
0x1389:   5e                           	pop rsi
0x138a:   48 89 e2                     	mov rdx, rsp
0x138d:   48 83 e4 f0                  	and rsp, 0xfffffffffffffff0
0x1391:   50                           	push rax
0x1392:   54                           	push rsp
0x1393:   4c 8d 05 76 0f 00 00         	lea r8, [rip + 0xf76]
0x139a:   48 8d 0d ff 0e 00 00         	lea rcx, [rip + 0xeff]
0x13a1:   48 8d 3d c1 00 00 00         	lea rdi, [rip + 0xc1]
0x13a8:   ff 15 32 3c 00 00            	call qword ptr [rip + 0x3c32] <__libc_start_main>
0x13ae:   f4                           	hlt 
; data inside code section at 0x13af -- 0x13b0
0x13af:   90                                                 |.               |
; function: deregister_tm_clones at 0x13b0 -- 0x13d9
0x13b0:   48 8d 3d 59 3c 00 00         	lea rdi, [rip + 0x3c59]
0x13b7:   48 8d 05 52 3c 00 00         	lea rax, [rip + 0x3c52]
0x13be:   48 39 f8                     	cmp rax, rdi
0x13c1:   74 15                        	je 0x13d8 <deregister_tm_clones+0x28>
0x13c3:   48 8b 05 0e 3c 00 00         	mov rax, qword ptr [rip + 0x3c0e]
0x13ca:   48 85 c0                     	test rax, rax
0x13cd:   74 09                        	je 0x13d8 <deregister_tm_clones+0x28>
0x13cf:   ff e0                        	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x13d1 -- 0x13d8
0x13d1:   0f 1f 80 00 00 00 00                               |.......         |
0x13d8:   c3                           	ret 
; data inside code section at 0x13d9 -- 0x13e0
0x13d9:   0f 1f 80 00 00 00 00                               |.......         |
; function: register_tm_clones at 0x13e0 -- 0x1419
0x13e0:   48 8d 3d 29 3c 00 00         	lea rdi, [rip + 0x3c29]
0x13e7:   48 8d 35 22 3c 00 00         	lea rsi, [rip + 0x3c22]
0x13ee:   48 29 fe                     	sub rsi, rdi
0x13f1:   48 89 f0                     	mov rax, rsi
0x13f4:   48 c1 ee 3f                  	shr rsi, 0x3f
0x13f8:   48 c1 f8 03                  	sar rax, 3
0x13fc:   48 01 c6                     	add rsi, rax
0x13ff:   48 d1 fe                     	sar rsi, 1
0x1402:   74 14                        	je 0x1418 <register_tm_clones+0x38>
0x1404:   48 8b 05 e5 3b 00 00         	mov rax, qword ptr [rip + 0x3be5]
0x140b:   48 85 c0                     	test rax, rax
0x140e:   74 08                        	je 0x1418 <register_tm_clones+0x38>
0x1410:   ff e0                        	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x1412 -- 0x1418
0x1412:   66 0f 1f 44 00 00                                  |f..D..          |
0x1418:   c3                           	ret 
; data inside code section at 0x1419 -- 0x1420
0x1419:   0f 1f 80 00 00 00 00                               |.......         |
; function: __do_global_dtors_aux at 0x1420 -- 0x1459
0x1420:   f3 0f 1e fa                  	endbr64 
0x1424:   80 3d 1d 3c 00 00 00         	cmp byte ptr [rip + 0x3c1d], 0
0x142b:   75 2b                        	jne 0x1458 <__do_global_dtors_aux+0x38>
0x142d:   55                           	push rbp
0x142e:   48 83 3d c2 3b 00 00 00      	cmp qword ptr [rip + 0x3bc2], 0
0x1436:   48 89 e5                     	mov rbp, rsp
0x1439:   74 0c                        	je 0x1447 <__do_global_dtors_aux+0x27>
0x143b:   48 8b 3d c6 3b 00 00         	mov rdi, qword ptr [rip + 0x3bc6]
0x1442:   e8 89 fd ff ff               	call 0x11d0 <__cxa_finalize>
0x1447:   e8 64 ff ff ff               	call 0x13b0 <deregister_tm_clones>
0x144c:   c6 05 f5 3b 00 00 01         	mov byte ptr [rip + 0x3bf5], 1
0x1453:   5d                           	pop rbp
0x1454:   c3                           	ret 
; data inside code section at 0x1455 -- 0x1458
0x1455:   0f 1f 00                                           |...             |
0x1458:   c3                           	ret 
; data inside code section at 0x1459 -- 0x1460
0x1459:   0f 1f 80 00 00 00 00                               |.......         |
; function: frame_dummy at 0x1460 -- 0x1469
0x1460:   f3 0f 1e fa                  	endbr64 
0x1464:   e9 77 ff ff ff               	jmp 0x13e0 <register_tm_clones>
; function: main at 0x1469 -- 0x16cb
0x1469:   f3 0f 1e fa                  	endbr64 
0x146d:   55                           	push rbp
0x146e:   48 89 e5                     	mov rbp, rsp
0x1471:   48 83 ec 30                  	sub rsp, 0x30
0x1475:   89 7d dc                     	mov dword ptr [rbp - 0x24], edi
0x1478:   48 89 75 d0                  	mov qword ptr [rbp - 0x30], rsi
0x147c:   64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x1485:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x1489:   31 c0                        	xor eax, eax
0x148b:   83 7d dc 04                  	cmp dword ptr [rbp - 0x24], 4
0x148f:   74 47                        	je 0x14d8 <main+0x6f>
0x1491:   48 8b 05 a8 3b 00 00         	mov rax, qword ptr [rip + 0x3ba8]
0x1498:   48 89 c2                     	mov rdx, rax
0x149b:   48 8d 35 66 1b 00 00         	lea rsi, [rip + 0x1b66]
0x14a2:   48 8d 3d 61 1b 00 00         	lea rdi, [rip + 0x1b61]
0x14a9:   e8 c2 fd ff ff               	call 0x1270 <freopen>
0x14ae:   48 8b 05 8b 3b 00 00         	mov rax, qword ptr [rip + 0x3b8b]
0x14b5:   48 89 c1                     	mov rcx, rax
0x14b8:   ba 23 00 00 00               	mov edx, 0x23
0x14bd:   be 01 00 00 00               	mov esi, 1
0x14c2:   48 8d 3d 4f 1b 00 00         	lea rdi, [rip + 0x1b4f]
0x14c9:   e8 82 fe ff ff               	call 0x1350 <fwrite>
0x14ce:   b8 01 00 00 00               	mov eax, 1
0x14d3:   e9 dd 01 00 00               	jmp 0x16b5 <main+0x24c>
0x14d8:   48 8b 45 d0                  	mov rax, qword ptr [rbp - 0x30]
0x14dc:   48 83 c0 08                  	add rax, 8
0x14e0:   48 8b 00                     	mov rax, qword ptr [rax]
0x14e3:   48 8d 4d f0                  	lea rcx, [rbp - 0x10]
0x14e7:   ba 00 00 00 00               	mov edx, 0
0x14ec:   48 89 ce                     	mov rsi, rcx
0x14ef:   48 89 c7                     	mov rdi, rax
0x14f2:   e8 a9 fd ff ff               	call 0x12a0 <strtol>
0x14f7:   89 45 e4                     	mov dword ptr [rbp - 0x1c], eax
0x14fa:   48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0x14fe:   0f b6 00                     	movzx eax, byte ptr [rax]
0x1501:   84 c0                        	test al, al
0x1503:   75 06                        	jne 0x150b <main+0xa2>
0x1505:   83 7d e4 02                  	cmp dword ptr [rbp - 0x1c], 2
0x1509:   7e 2a                        	jle 0x1535 <main+0xcc>
0x150b:   48 8b 05 2e 3b 00 00         	mov rax, qword ptr [rip + 0x3b2e]
0x1512:   48 89 c1                     	mov rcx, rax
0x1515:   ba 28 00 00 00               	mov edx, 0x28
0x151a:   be 01 00 00 00               	mov esi, 1
0x151f:   48 8d 3d 1a 1b 00 00         	lea rdi, [rip + 0x1b1a]
0x1526:   e8 25 fe ff ff               	call 0x1350 <fwrite>
0x152b:   b8 01 00 00 00               	mov eax, 1
0x1530:   e9 80 01 00 00               	jmp 0x16b5 <main+0x24c>
0x1535:   48 8b 45 d0                  	mov rax, qword ptr [rbp - 0x30]
0x1539:   48 83 c0 10                  	add rax, 0x10
0x153d:   48 8b 00                     	mov rax, qword ptr [rax]
0x1540:   48 89 c6                     	mov rsi, rax
0x1543:   48 8d 3d 16 3b 00 00         	lea rdi, [rip + 0x3b16]
0x154a:   e8 b1 fc ff ff               	call 0x1200 <strcpy>
0x154f:   48 8b 15 ea 3a 00 00         	mov rdx, qword ptr [rip + 0x3aea]
0x1556:   48 8b 45 d0                  	mov rax, qword ptr [rbp - 0x30]
0x155a:   48 83 c0 18                  	add rax, 0x18
0x155e:   48 8b 00                     	mov rax, qword ptr [rax]
0x1561:   48 8d 35 01 1b 00 00         	lea rsi, [rip + 0x1b01]
0x1568:   48 89 c7                     	mov rdi, rax
0x156b:   e8 00 fd ff ff               	call 0x1270 <freopen>
0x1570:   48 8b 05 c9 3a 00 00         	mov rax, qword ptr [rip + 0x3ac9]
0x1577:   be 00 00 00 00               	mov esi, 0
0x157c:   48 89 c7                     	mov rdi, rax
0x157f:   e8 cc fc ff ff               	call 0x1250 <setbuf>
0x1584:   be 61 00 00 00               	mov esi, 0x61
0x1589:   48 8d 3d db 1a 00 00         	lea rdi, [rip + 0x1adb]
0x1590:   e8 cb fd ff ff               	call 0x1360 <ftok>
0x1595:   89 45 e8                     	mov dword ptr [rbp - 0x18], eax
0x1598:   83 7d e8 ff                  	cmp dword ptr [rbp - 0x18], -1
0x159c:   75 16                        	jne 0x15b4 <main+0x14b>
0x159e:   48 8d 3d c8 1a 00 00         	lea rdi, [rip + 0x1ac8]
0x15a5:   e8 46 fd ff ff               	call 0x12f0 <perror>
0x15aa:   bf 01 00 00 00               	mov edi, 1
0x15af:   e8 8c fd ff ff               	call 0x1340 <exit>
0x15b4:   8b 45 e8                     	mov eax, dword ptr [rbp - 0x18]
0x15b7:   89 c7                        	mov edi, eax
0x15b9:   e8 25 07 00 00               	call 0x1ce3 <semConnect>
0x15be:   89 05 d4 3a 00 00            	mov dword ptr [rip + 0x3ad4], eax
0x15c4:   8b 05 ce 3a 00 00            	mov eax, dword ptr [rip + 0x3ace]
0x15ca:   83 f8 ff                     	cmp eax, -1
0x15cd:   75 16                        	jne 0x15e5 <main+0x17c>
0x15cf:   48 8d 3d ba 1a 00 00         	lea rdi, [rip + 0x1aba]
0x15d6:   e8 15 fd ff ff               	call 0x12f0 <perror>
0x15db:   b8 01 00 00 00               	mov eax, 1
0x15e0:   e9 d0 00 00 00               	jmp 0x16b5 <main+0x24c>
0x15e5:   8b 45 e8                     	mov eax, dword ptr [rbp - 0x18]
0x15e8:   89 c7                        	mov edi, eax
0x15ea:   e8 14 06 00 00               	call 0x1c03 <shmemConnect>
0x15ef:   89 05 9f 3a 00 00            	mov dword ptr [rip + 0x3a9f], eax
0x15f5:   8b 05 99 3a 00 00            	mov eax, dword ptr [rip + 0x3a99]
0x15fb:   83 f8 ff                     	cmp eax, -1
0x15fe:   75 16                        	jne 0x1616 <main+0x1ad>
0x1600:   48 8d 3d b9 1a 00 00         	lea rdi, [rip + 0x1ab9]
0x1607:   e8 e4 fc ff ff               	call 0x12f0 <perror>
0x160c:   b8 01 00 00 00               	mov eax, 1
0x1611:   e9 9f 00 00 00               	jmp 0x16b5 <main+0x24c>
0x1616:   8b 05 78 3a 00 00            	mov eax, dword ptr [rip + 0x3a78]
0x161c:   48 8d 35 7d 3a 00 00         	lea rsi, [rip + 0x3a7d]
0x1623:   89 c7                        	mov edi, eax
0x1625:   e8 23 06 00 00               	call 0x1c4d <shmemAttach>
0x162a:   83 f8 ff                     	cmp eax, -1
0x162d:   75 13                        	jne 0x1642 <main+0x1d9>
0x162f:   48 8d 3d ba 1a 00 00         	lea rdi, [rip + 0x1aba]
0x1636:   e8 b5 fc ff ff               	call 0x12f0 <perror>
0x163b:   b8 01 00 00 00               	mov eax, 1
0x1640:   eb 73                        	jmp 0x16b5 <main+0x24c>
0x1642:   e8 d9 fb ff ff               	call 0x1220 <getpid>
0x1647:   89 c7                        	mov edi, eax
0x1649:   e8 a2 fb ff ff               	call 0x11f0 <srandom>
0x164e:   8b 45 e4                     	mov eax, dword ptr [rbp - 0x1c]
0x1651:   89 c7                        	mov edi, eax
0x1653:   e8 73 00 00 00               	call 0x16cb <arrive>
0x1658:   8b 45 e4                     	mov eax, dword ptr [rbp - 0x1c]
0x165b:   89 c7                        	mov edi, eax
0x165d:   e8 50 01 00 00               	call 0x17b2 <goalieConstituteTeam>
0x1662:   89 45 ec                     	mov dword ptr [rbp - 0x14], eax
0x1665:   83 7d ec 00                  	cmp dword ptr [rbp - 0x14], 0
0x1669:   74 1e                        	je 0x1689 <main+0x220>
0x166b:   8b 55 ec                     	mov edx, dword ptr [rbp - 0x14]
0x166e:   8b 45 e4                     	mov eax, dword ptr [rbp - 0x1c]
0x1671:   89 d6                        	mov esi, edx
0x1673:   89 c7                        	mov edi, eax
0x1675:   e8 a1 03 00 00               	call 0x1a1b <waitReferee>
0x167a:   8b 55 ec                     	mov edx, dword ptr [rbp - 0x14]
0x167d:   8b 45 e4                     	mov eax, dword ptr [rbp - 0x1c]
0x1680:   89 d6                        	mov esi, edx
0x1682:   89 c7                        	mov edi, eax
0x1684:   e8 7e 04 00 00               	call 0x1b07 <playUntilEnd>
0x1689:   48 8b 05 10 3a 00 00         	mov rax, qword ptr [rip + 0x3a10]
0x1690:   48 89 c7                     	mov rdi, rax
0x1693:   e8 00 06 00 00               	call 0x1c98 <shmemDettach>
0x1698:   83 f8 ff                     	cmp eax, -1
0x169b:   75 13                        	jne 0x16b0 <main+0x247>
0x169d:   48 8d 3d 8c 1a 00 00         	lea rdi, [rip + 0x1a8c]
0x16a4:   e8 47 fc ff ff               	call 0x12f0 <perror>
0x16a9:   b8 01 00 00 00               	mov eax, 1
0x16ae:   eb 05                        	jmp 0x16b5 <main+0x24c>
0x16b0:   b8 00 00 00 00               	mov eax, 0
0x16b5:   48 8b 4d f8                  	mov rcx, qword ptr [rbp - 8]
0x16b9:   64 48 33 0c 25 28 00 00 00   	xor rcx, qword ptr fs:[0x28]
0x16c2:   74 05                        	je 0x16c9 <main+0x260>
0x16c4:   e8 77 fb ff ff               	call 0x1240 <__stack_chk_fail>
0x16c9:   c9                           	leave 
0x16ca:   c3                           	ret 
; function: arrive at 0x16cb -- 0x17b2
0x16cb:   f3 0f 1e fa                  	endbr64 
0x16cf:   55                           	push rbp
0x16d0:   48 89 e5                     	mov rbp, rsp
0x16d3:   48 83 ec 10                  	sub rsp, 0x10
0x16d7:   89 7d fc                     	mov dword ptr [rbp - 4], edi
0x16da:   48 8b 05 bf 39 00 00         	mov rax, qword ptr [rip + 0x39bf]
0x16e1:   8b 50 58                     	mov edx, dword ptr [rax + 0x58]
0x16e4:   8b 05 ae 39 00 00            	mov eax, dword ptr [rip + 0x39ae]
0x16ea:   89 d6                        	mov esi, edx
0x16ec:   89 c7                        	mov edi, eax
0x16ee:   e8 1c 07 00 00               	call 0x1e0f <semDown>
0x16f3:   83 f8 ff                     	cmp eax, -1
0x16f6:   75 16                        	jne 0x170e <arrive+0x43>
0x16f8:   48 8d 3d 79 1a 00 00         	lea rdi, [rip + 0x1a79]
0x16ff:   e8 ec fb ff ff               	call 0x12f0 <perror>
0x1704:   bf 01 00 00 00               	mov edi, 1
0x1709:   e8 32 fc ff ff               	call 0x1340 <exit>
0x170e:   48 8b 05 8b 39 00 00         	mov rax, qword ptr [rip + 0x398b]
0x1715:   8b 55 fc                     	mov edx, dword ptr [rbp - 4]
0x1718:   48 63 d2                     	movsxd rdx, edx
0x171b:   48 83 c2 08                  	add rdx, 8
0x171f:   c7 44 90 08 41 00 00 00      	mov dword ptr [rax + rdx*4 + 8], 0x41
0x1727:   48 8b 05 72 39 00 00         	mov rax, qword ptr [rip + 0x3972]
0x172e:   48 89 c6                     	mov rsi, rax
0x1731:   48 8d 3d 28 39 00 00         	lea rdi, [rip + 0x3928]
0x1738:   e8 4f 0a 00 00               	call 0x218c <saveState>
0x173d:   48 8b 05 5c 39 00 00         	mov rax, qword ptr [rip + 0x395c]
0x1744:   8b 50 58                     	mov edx, dword ptr [rax + 0x58]
0x1747:   8b 05 4b 39 00 00            	mov eax, dword ptr [rip + 0x394b]
0x174d:   89 d6                        	mov esi, edx
0x174f:   89 c7                        	mov edi, eax
0x1751:   e8 44 07 00 00               	call 0x1e9a <semUp>
0x1756:   83 f8 ff                     	cmp eax, -1
0x1759:   75 16                        	jne 0x1771 <arrive+0xa6>
0x175b:   48 8d 3d 4e 1a 00 00         	lea rdi, [rip + 0x1a4e]
0x1762:   e8 89 fb ff ff               	call 0x12f0 <perror>
0x1767:   bf 01 00 00 00               	mov edi, 1
0x176c:   e8 cf fb ff ff               	call 0x1340 <exit>
0x1771:   e8 3a fb ff ff               	call 0x12b0 <random>
0x1776:   f2 48 0f 2a c8               	cvtsi2sd xmm1, rax
0x177b:   f2 0f 10 05 65 1a 00 00      	movsd xmm0, qword ptr [rip + 0x1a65]
0x1783:   f2 0f 59 c1                  	mulsd xmm0, xmm1
0x1787:   f2 0f 10 0d 61 1a 00 00      	movsd xmm1, qword ptr [rip + 0x1a61]
0x178f:   f2 0f 5e c1                  	divsd xmm0, xmm1
0x1793:   66 0f 28 c8                  	movapd xmm1, xmm0
0x1797:   f2 0f 10 05 59 1a 00 00      	movsd xmm0, qword ptr [rip + 0x1a59]
0x179f:   f2 0f 58 c1                  	addsd xmm0, xmm1
0x17a3:   f2 48 0f 2c c0               	cvttsd2si rax, xmm0
0x17a8:   89 c7                        	mov edi, eax
0x17aa:   e8 c1 fb ff ff               	call 0x1370 <usleep>
0x17af:   90                           	nop 
0x17b0:   c9                           	leave 
0x17b1:   c3                           	ret 
; function: goalieConstituteTeam at 0x17b2 -- 0x1a1b
0x17b2:   f3 0f 1e fa                  	endbr64 
0x17b6:   55                           	push rbp
0x17b7:   48 89 e5                     	mov rbp, rsp
0x17ba:   48 83 ec 20                  	sub rsp, 0x20
0x17be:   89 7d ec                     	mov dword ptr [rbp - 0x14], edi
0x17c1:   c7 45 f8 00 00 00 00         	mov dword ptr [rbp - 8], 0
0x17c8:   48 8b 05 d1 38 00 00         	mov rax, qword ptr [rip + 0x38d1]
0x17cf:   8b 50 58                     	mov edx, dword ptr [rax + 0x58]
0x17d2:   8b 05 c0 38 00 00            	mov eax, dword ptr [rip + 0x38c0]
0x17d8:   89 d6                        	mov esi, edx
0x17da:   89 c7                        	mov edi, eax
0x17dc:   e8 2e 06 00 00               	call 0x1e0f <semDown>
0x17e1:   83 f8 ff                     	cmp eax, -1
0x17e4:   75 16                        	jne 0x17fc <goalieConstituteTeam+0x4a>
0x17e6:   48 8d 3d 8b 19 00 00         	lea rdi, [rip + 0x198b]
0x17ed:   e8 fe fa ff ff               	call 0x12f0 <perror>
0x17f2:   bf 01 00 00 00               	mov edi, 1
0x17f7:   e8 44 fb ff ff               	call 0x1340 <exit>
0x17fc:   c6 45 f7 00                  	mov byte ptr [rbp - 9], 0
0x1800:   48 8b 05 99 38 00 00         	mov rax, qword ptr [rip + 0x3899]
0x1807:   8b 50 48                     	mov edx, dword ptr [rax + 0x48]
0x180a:   83 c2 01                     	add edx, 1
0x180d:   89 50 48                     	mov dword ptr [rax + 0x48], edx
0x1810:   48 8b 05 89 38 00 00         	mov rax, qword ptr [rip + 0x3889]
0x1817:   8b 50 50                     	mov edx, dword ptr [rax + 0x50]
0x181a:   83 c2 01                     	add edx, 1
0x181d:   89 50 50                     	mov dword ptr [rax + 0x50], edx
0x1820:   48 8b 05 79 38 00 00         	mov rax, qword ptr [rip + 0x3879]
0x1827:   8b 40 48                     	mov eax, dword ptr [rax + 0x48]
0x182a:   83 f8 02                     	cmp eax, 2
0x182d:   0f 8f 34 01 00 00            	jg 0x1967 <goalieConstituteTeam+0x1b5>
0x1833:   48 8b 05 66 38 00 00         	mov rax, qword ptr [rip + 0x3866]
0x183a:   8b 40 4c                     	mov eax, dword ptr [rax + 0x4c]
0x183d:   83 f8 03                     	cmp eax, 3
0x1840:   0f 8e ec 00 00 00            	jle 0x1932 <goalieConstituteTeam+0x180>
0x1846:   48 8b 05 53 38 00 00         	mov rax, qword ptr [rip + 0x3853]
0x184d:   8b 40 50                     	mov eax, dword ptr [rax + 0x50]
0x1850:   85 c0                        	test eax, eax
0x1852:   0f 8e da 00 00 00            	jle 0x1932 <goalieConstituteTeam+0x180>
0x1858:   48 8b 05 41 38 00 00         	mov rax, qword ptr [rip + 0x3841]
0x185f:   8b 55 ec                     	mov edx, dword ptr [rbp - 0x14]
0x1862:   48 63 d2                     	movsxd rdx, edx
0x1865:   48 83 c2 08                  	add rdx, 8
0x1869:   c7 44 90 08 46 00 00 00      	mov dword ptr [rax + rdx*4 + 8], 0x46
0x1871:   48 8b 05 28 38 00 00         	mov rax, qword ptr [rip + 0x3828]
0x1878:   48 89 c6                     	mov rsi, rax
0x187b:   48 8d 3d de 37 00 00         	lea rdi, [rip + 0x37de]
0x1882:   e8 05 09 00 00               	call 0x218c <saveState>
0x1887:   48 8b 05 12 38 00 00         	mov rax, qword ptr [rip + 0x3812]
0x188e:   8b 50 4c                     	mov edx, dword ptr [rax + 0x4c]
0x1891:   48 8b 05 08 38 00 00         	mov rax, qword ptr [rip + 0x3808]
0x1898:   83 ea 04                     	sub edx, 4
0x189b:   89 50 4c                     	mov dword ptr [rax + 0x4c], edx
0x189e:   48 8b 05 fb 37 00 00         	mov rax, qword ptr [rip + 0x37fb]
0x18a5:   8b 50 50                     	mov edx, dword ptr [rax + 0x50]
0x18a8:   48 8b 05 f1 37 00 00         	mov rax, qword ptr [rip + 0x37f1]
0x18af:   83 ea 01                     	sub edx, 1
0x18b2:   89 50 50                     	mov dword ptr [rax + 0x50], edx
0x18b5:   c7 45 fc 00 00 00 00         	mov dword ptr [rbp - 4], 0
0x18bc:   eb 36                        	jmp 0x18f4 <goalieConstituteTeam+0x142>
0x18be:   48 8b 05 db 37 00 00         	mov rax, qword ptr [rip + 0x37db]
0x18c5:   8b 50 5c                     	mov edx, dword ptr [rax + 0x5c]
0x18c8:   8b 05 ca 37 00 00            	mov eax, dword ptr [rip + 0x37ca]
0x18ce:   89 d6                        	mov esi, edx
0x18d0:   89 c7                        	mov edi, eax
0x18d2:   e8 c3 05 00 00               	call 0x1e9a <semUp>
0x18d7:   48 8b 05 c2 37 00 00         	mov rax, qword ptr [rip + 0x37c2]
0x18de:   8b 50 70                     	mov edx, dword ptr [rax + 0x70]
0x18e1:   8b 05 b1 37 00 00            	mov eax, dword ptr [rip + 0x37b1]
0x18e7:   89 d6                        	mov esi, edx
0x18e9:   89 c7                        	mov edi, eax
0x18eb:   e8 1f 05 00 00               	call 0x1e0f <semDown>
0x18f0:   83 45 fc 01                  	add dword ptr [rbp - 4], 1
0x18f4:   83 7d fc 03                  	cmp dword ptr [rbp - 4], 3
0x18f8:   7e c4                        	jle 0x18be <goalieConstituteTeam+0x10c>
0x18fa:   48 8b 05 9f 37 00 00         	mov rax, qword ptr [rip + 0x379f]
0x1901:   8b 40 54                     	mov eax, dword ptr [rax + 0x54]
0x1904:   89 45 f8                     	mov dword ptr [rbp - 8], eax
0x1907:   48 8b 05 92 37 00 00         	mov rax, qword ptr [rip + 0x3792]
0x190e:   8b 50 54                     	mov edx, dword ptr [rax + 0x54]
0x1911:   83 c2 01                     	add edx, 1
0x1914:   89 50 54                     	mov dword ptr [rax + 0x54], edx
0x1917:   48 8b 05 82 37 00 00         	mov rax, qword ptr [rip + 0x3782]
0x191e:   8b 50 6c                     	mov edx, dword ptr [rax + 0x6c]
0x1921:   8b 05 71 37 00 00            	mov eax, dword ptr [rip + 0x3771]
0x1927:   89 d6                        	mov esi, edx
0x1929:   89 c7                        	mov edi, eax
0x192b:   e8 6a 05 00 00               	call 0x1e9a <semUp>
0x1930:   eb 6b                        	jmp 0x199d <goalieConstituteTeam+0x1eb>
0x1932:   48 8b 05 67 37 00 00         	mov rax, qword ptr [rip + 0x3767]
0x1939:   8b 55 ec                     	mov edx, dword ptr [rbp - 0x14]
0x193c:   48 63 d2                     	movsxd rdx, edx
0x193f:   48 83 c2 08                  	add rdx, 8
0x1943:   c7 44 90 08 57 00 00 00      	mov dword ptr [rax + rdx*4 + 8], 0x57
0x194b:   48 8b 05 4e 37 00 00         	mov rax, qword ptr [rip + 0x374e]
0x1952:   48 89 c6                     	mov rsi, rax
0x1955:   48 8d 3d 04 37 00 00         	lea rdi, [rip + 0x3704]
0x195c:   e8 2b 08 00 00               	call 0x218c <saveState>
0x1961:   c6 45 f7 01                  	mov byte ptr [rbp - 9], 1
0x1965:   eb 36                        	jmp 0x199d <goalieConstituteTeam+0x1eb>
0x1967:   48 8b 05 32 37 00 00         	mov rax, qword ptr [rip + 0x3732]
0x196e:   8b 55 ec                     	mov edx, dword ptr [rbp - 0x14]
0x1971:   48 63 d2                     	movsxd rdx, edx
0x1974:   48 83 c2 08                  	add rdx, 8
0x1978:   c7 44 90 08 4c 00 00 00      	mov dword ptr [rax + rdx*4 + 8], 0x4c
0x1980:   48 8b 05 19 37 00 00         	mov rax, qword ptr [rip + 0x3719]
0x1987:   48 89 c6                     	mov rsi, rax
0x198a:   48 8d 3d cf 36 00 00         	lea rdi, [rip + 0x36cf]
0x1991:   e8 f6 07 00 00               	call 0x218c <saveState>
0x1996:   c7 45 f8 00 00 00 00         	mov dword ptr [rbp - 8], 0
0x199d:   48 8b 05 fc 36 00 00         	mov rax, qword ptr [rip + 0x36fc]
0x19a4:   8b 50 58                     	mov edx, dword ptr [rax + 0x58]
0x19a7:   8b 05 eb 36 00 00            	mov eax, dword ptr [rip + 0x36eb]
0x19ad:   89 d6                        	mov esi, edx
0x19af:   89 c7                        	mov edi, eax
0x19b1:   e8 e4 04 00 00               	call 0x1e9a <semUp>
0x19b6:   83 f8 ff                     	cmp eax, -1
0x19b9:   75 16                        	jne 0x19d1 <goalieConstituteTeam+0x21f>
0x19bb:   48 8d 3d ee 17 00 00         	lea rdi, [rip + 0x17ee]
0x19c2:   e8 29 f9 ff ff               	call 0x12f0 <perror>
0x19c7:   bf 01 00 00 00               	mov edi, 1
0x19cc:   e8 6f f9 ff ff               	call 0x1340 <exit>
0x19d1:   80 7d f7 00                  	cmp byte ptr [rbp - 9], 0
0x19d5:   74 3f                        	je 0x1a16 <goalieConstituteTeam+0x264>
0x19d7:   48 8b 05 c2 36 00 00         	mov rax, qword ptr [rip + 0x36c2]
0x19de:   8b 50 60                     	mov edx, dword ptr [rax + 0x60]
0x19e1:   8b 05 b1 36 00 00            	mov eax, dword ptr [rip + 0x36b1]
0x19e7:   89 d6                        	mov esi, edx
0x19e9:   89 c7                        	mov edi, eax
0x19eb:   e8 1f 04 00 00               	call 0x1e0f <semDown>
0x19f0:   48 8b 05 a9 36 00 00         	mov rax, qword ptr [rip + 0x36a9]
0x19f7:   8b 40 54                     	mov eax, dword ptr [rax + 0x54]
0x19fa:   89 45 f8                     	mov dword ptr [rbp - 8], eax
0x19fd:   48 8b 05 9c 36 00 00         	mov rax, qword ptr [rip + 0x369c]
0x1a04:   8b 50 70                     	mov edx, dword ptr [rax + 0x70]
0x1a07:   8b 05 8b 36 00 00            	mov eax, dword ptr [rip + 0x368b]
0x1a0d:   89 d6                        	mov esi, edx
0x1a0f:   89 c7                        	mov edi, eax
0x1a11:   e8 84 04 00 00               	call 0x1e9a <semUp>
0x1a16:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x1a19:   c9                           	leave 
0x1a1a:   c3                           	ret 
; function: waitReferee at 0x1a1b -- 0x1b07
0x1a1b:   f3 0f 1e fa                  	endbr64 
0x1a1f:   55                           	push rbp
0x1a20:   48 89 e5                     	mov rbp, rsp
0x1a23:   48 83 ec 10                  	sub rsp, 0x10
0x1a27:   89 7d fc                     	mov dword ptr [rbp - 4], edi
0x1a2a:   89 75 f8                     	mov dword ptr [rbp - 8], esi
0x1a2d:   48 8b 05 6c 36 00 00         	mov rax, qword ptr [rip + 0x366c]
0x1a34:   8b 50 58                     	mov edx, dword ptr [rax + 0x58]
0x1a37:   8b 05 5b 36 00 00            	mov eax, dword ptr [rip + 0x365b]
0x1a3d:   89 d6                        	mov esi, edx
0x1a3f:   89 c7                        	mov edi, eax
0x1a41:   e8 c9 03 00 00               	call 0x1e0f <semDown>
0x1a46:   83 f8 ff                     	cmp eax, -1
0x1a49:   75 16                        	jne 0x1a61 <waitReferee+0x46>
0x1a4b:   48 8d 3d 26 17 00 00         	lea rdi, [rip + 0x1726]
0x1a52:   e8 99 f8 ff ff               	call 0x12f0 <perror>
0x1a57:   bf 01 00 00 00               	mov edi, 1
0x1a5c:   e8 df f8 ff ff               	call 0x1340 <exit>
0x1a61:   83 7d f8 01                  	cmp dword ptr [rbp - 8], 1
0x1a65:   75 07                        	jne 0x1a6e <waitReferee+0x53>
0x1a67:   b9 73 00 00 00               	mov ecx, 0x73
0x1a6c:   eb 05                        	jmp 0x1a73 <waitReferee+0x58>
0x1a6e:   b9 53 00 00 00               	mov ecx, 0x53
0x1a73:   48 8b 05 26 36 00 00         	mov rax, qword ptr [rip + 0x3626]
0x1a7a:   8b 55 fc                     	mov edx, dword ptr [rbp - 4]
0x1a7d:   48 63 d2                     	movsxd rdx, edx
0x1a80:   48 83 c2 08                  	add rdx, 8
0x1a84:   89 4c 90 08                  	mov dword ptr [rax + rdx*4 + 8], ecx
0x1a88:   48 8b 05 11 36 00 00         	mov rax, qword ptr [rip + 0x3611]
0x1a8f:   48 89 c6                     	mov rsi, rax
0x1a92:   48 8d 3d c7 35 00 00         	lea rdi, [rip + 0x35c7]
0x1a99:   e8 ee 06 00 00               	call 0x218c <saveState>
0x1a9e:   48 8b 05 fb 35 00 00         	mov rax, qword ptr [rip + 0x35fb]
0x1aa5:   8b 50 58                     	mov edx, dword ptr [rax + 0x58]
0x1aa8:   8b 05 ea 35 00 00            	mov eax, dword ptr [rip + 0x35ea]
0x1aae:   89 d6                        	mov esi, edx
0x1ab0:   89 c7                        	mov edi, eax
0x1ab2:   e8 e3 03 00 00               	call 0x1e9a <semUp>
0x1ab7:   83 f8 ff                     	cmp eax, -1
0x1aba:   75 16                        	jne 0x1ad2 <waitReferee+0xb7>
0x1abc:   48 8d 3d ed 16 00 00         	lea rdi, [rip + 0x16ed]
0x1ac3:   e8 28 f8 ff ff               	call 0x12f0 <perror>
0x1ac8:   bf 01 00 00 00               	mov edi, 1
0x1acd:   e8 6e f8 ff ff               	call 0x1340 <exit>
0x1ad2:   48 8b 05 c7 35 00 00         	mov rax, qword ptr [rip + 0x35c7]
0x1ad9:   8b 50 64                     	mov edx, dword ptr [rax + 0x64]
0x1adc:   8b 05 b6 35 00 00            	mov eax, dword ptr [rip + 0x35b6]
0x1ae2:   89 d6                        	mov esi, edx
0x1ae4:   89 c7                        	mov edi, eax
0x1ae6:   e8 24 03 00 00               	call 0x1e0f <semDown>
0x1aeb:   48 8b 05 ae 35 00 00         	mov rax, qword ptr [rip + 0x35ae]
0x1af2:   8b 50 74                     	mov edx, dword ptr [rax + 0x74]
0x1af5:   8b 05 9d 35 00 00            	mov eax, dword ptr [rip + 0x359d]
0x1afb:   89 d6                        	mov esi, edx
0x1afd:   89 c7                        	mov edi, eax
0x1aff:   e8 96 03 00 00               	call 0x1e9a <semUp>
0x1b04:   90                           	nop 
0x1b05:   c9                           	leave 
0x1b06:   c3                           	ret 
; function: playUntilEnd at 0x1b07 -- 0x1bda
0x1b07:   f3 0f 1e fa                  	endbr64 
0x1b0b:   55                           	push rbp
0x1b0c:   48 89 e5                     	mov rbp, rsp
0x1b0f:   48 83 ec 10                  	sub rsp, 0x10
0x1b13:   89 7d fc                     	mov dword ptr [rbp - 4], edi
0x1b16:   89 75 f8                     	mov dword ptr [rbp - 8], esi
0x1b19:   48 8b 05 80 35 00 00         	mov rax, qword ptr [rip + 0x3580]
0x1b20:   8b 50 58                     	mov edx, dword ptr [rax + 0x58]
0x1b23:   8b 05 6f 35 00 00            	mov eax, dword ptr [rip + 0x356f]
0x1b29:   89 d6                        	mov esi, edx
0x1b2b:   89 c7                        	mov edi, eax
0x1b2d:   e8 dd 02 00 00               	call 0x1e0f <semDown>
0x1b32:   83 f8 ff                     	cmp eax, -1
0x1b35:   75 16                        	jne 0x1b4d <playUntilEnd+0x46>
0x1b37:   48 8d 3d 3a 16 00 00         	lea rdi, [rip + 0x163a]
0x1b3e:   e8 ad f7 ff ff               	call 0x12f0 <perror>
0x1b43:   bf 01 00 00 00               	mov edi, 1
0x1b48:   e8 f3 f7 ff ff               	call 0x1340 <exit>
0x1b4d:   83 7d f8 01                  	cmp dword ptr [rbp - 8], 1
0x1b51:   75 07                        	jne 0x1b5a <playUntilEnd+0x53>
0x1b53:   b9 70 00 00 00               	mov ecx, 0x70
0x1b58:   eb 05                        	jmp 0x1b5f <playUntilEnd+0x58>
0x1b5a:   b9 50 00 00 00               	mov ecx, 0x50
0x1b5f:   48 8b 05 3a 35 00 00         	mov rax, qword ptr [rip + 0x353a]
0x1b66:   8b 55 fc                     	mov edx, dword ptr [rbp - 4]
0x1b69:   48 63 d2                     	movsxd rdx, edx
0x1b6c:   48 83 c2 08                  	add rdx, 8
0x1b70:   89 4c 90 08                  	mov dword ptr [rax + rdx*4 + 8], ecx
0x1b74:   48 8b 05 25 35 00 00         	mov rax, qword ptr [rip + 0x3525]
0x1b7b:   48 89 c6                     	mov rsi, rax
0x1b7e:   48 8d 3d db 34 00 00         	lea rdi, [rip + 0x34db]
0x1b85:   e8 02 06 00 00               	call 0x218c <saveState>
0x1b8a:   48 8b 05 0f 35 00 00         	mov rax, qword ptr [rip + 0x350f]
0x1b91:   8b 50 58                     	mov edx, dword ptr [rax + 0x58]
0x1b94:   8b 05 fe 34 00 00            	mov eax, dword ptr [rip + 0x34fe]
0x1b9a:   89 d6                        	mov esi, edx
0x1b9c:   89 c7                        	mov edi, eax
0x1b9e:   e8 f7 02 00 00               	call 0x1e9a <semUp>
0x1ba3:   83 f8 ff                     	cmp eax, -1
0x1ba6:   75 16                        	jne 0x1bbe <playUntilEnd+0xb7>
0x1ba8:   48 8d 3d 01 16 00 00         	lea rdi, [rip + 0x1601]
0x1baf:   e8 3c f7 ff ff               	call 0x12f0 <perror>
0x1bb4:   bf 01 00 00 00               	mov edi, 1
0x1bb9:   e8 82 f7 ff ff               	call 0x1340 <exit>
0x1bbe:   48 8b 05 db 34 00 00         	mov rax, qword ptr [rip + 0x34db]
0x1bc5:   8b 50 68                     	mov edx, dword ptr [rax + 0x68]
0x1bc8:   8b 05 ca 34 00 00            	mov eax, dword ptr [rip + 0x34ca]
0x1bce:   89 d6                        	mov esi, edx
0x1bd0:   89 c7                        	mov edi, eax
0x1bd2:   e8 38 02 00 00               	call 0x1e0f <semDown>
0x1bd7:   90                           	nop 
0x1bd8:   c9                           	leave 
0x1bd9:   c3                           	ret 
; function: shmemCreate at 0x1bda -- 0x1c03
0x1bda:   f3 0f 1e fa                  	endbr64 
0x1bde:   55                           	push rbp
0x1bdf:   48 89 e5                     	mov rbp, rsp
0x1be2:   48 83 ec 10                  	sub rsp, 0x10
0x1be6:   89 7d fc                     	mov dword ptr [rbp - 4], edi
0x1be9:   89 75 f8                     	mov dword ptr [rbp - 8], esi
0x1bec:   8b 4d f8                     	mov ecx, dword ptr [rbp - 8]
0x1bef:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x1bf2:   ba 80 07 00 00               	mov edx, 0x780
0x1bf7:   48 89 ce                     	mov rsi, rcx
0x1bfa:   89 c7                        	mov edi, eax
0x1bfc:   e8 1f f7 ff ff               	call 0x1320 <shmget>
0x1c01:   c9                           	leave 
0x1c02:   c3                           	ret 
; function: shmemConnect at 0x1c03 -- 0x1c28
0x1c03:   f3 0f 1e fa                  	endbr64 
0x1c07:   55                           	push rbp
0x1c08:   48 89 e5                     	mov rbp, rsp
0x1c0b:   48 83 ec 10                  	sub rsp, 0x10
0x1c0f:   89 7d fc                     	mov dword ptr [rbp - 4], edi
0x1c12:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x1c15:   ba 80 01 00 00               	mov edx, 0x180
0x1c1a:   be 01 00 00 00               	mov esi, 1
0x1c1f:   89 c7                        	mov edi, eax
0x1c21:   e8 fa f6 ff ff               	call 0x1320 <shmget>
0x1c26:   c9                           	leave 
0x1c27:   c3                           	ret 
; function: shmemDestroy at 0x1c28 -- 0x1c4d
0x1c28:   f3 0f 1e fa                  	endbr64 
0x1c2c:   55                           	push rbp
0x1c2d:   48 89 e5                     	mov rbp, rsp
0x1c30:   48 83 ec 10                  	sub rsp, 0x10
0x1c34:   89 7d fc                     	mov dword ptr [rbp - 4], edi
0x1c37:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x1c3a:   ba 00 00 00 00               	mov edx, 0
0x1c3f:   be 00 00 00 00               	mov esi, 0
0x1c44:   89 c7                        	mov edi, eax
0x1c46:   e8 85 f6 ff ff               	call 0x12d0 <shmctl>
0x1c4b:   c9                           	leave 
0x1c4c:   c3                           	ret 
; function: shmemAttach at 0x1c4d -- 0x1c98
0x1c4d:   f3 0f 1e fa                  	endbr64 
0x1c51:   55                           	push rbp
0x1c52:   48 89 e5                     	mov rbp, rsp
0x1c55:   48 83 ec 20                  	sub rsp, 0x20
0x1c59:   89 7d ec                     	mov dword ptr [rbp - 0x14], edi
0x1c5c:   48 89 75 e0                  	mov qword ptr [rbp - 0x20], rsi
0x1c60:   8b 45 ec                     	mov eax, dword ptr [rbp - 0x14]
0x1c63:   ba 00 00 00 00               	mov edx, 0
0x1c68:   be 00 00 00 00               	mov esi, 0
0x1c6d:   89 c7                        	mov edi, eax
0x1c6f:   e8 9c f6 ff ff               	call 0x1310 <shmat>
0x1c74:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x1c78:   48 83 7d f8 ff               	cmp qword ptr [rbp - 8], -1
0x1c7d:   74 12                        	je 0x1c91 <shmemAttach+0x44>
0x1c7f:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x1c83:   48 8b 55 f8                  	mov rdx, qword ptr [rbp - 8]
0x1c87:   48 89 10                     	mov qword ptr [rax], rdx
0x1c8a:   b8 00 00 00 00               	mov eax, 0
0x1c8f:   eb 05                        	jmp 0x1c96 <shmemAttach+0x49>
0x1c91:   b8 01 00 00 00               	mov eax, 1
0x1c96:   c9                           	leave 
0x1c97:   c3                           	ret 
; function: shmemDettach at 0x1c98 -- 0x1cb6
0x1c98:   f3 0f 1e fa                  	endbr64 
0x1c9c:   55                           	push rbp
0x1c9d:   48 89 e5                     	mov rbp, rsp
0x1ca0:   48 83 ec 10                  	sub rsp, 0x10
0x1ca4:   48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0x1ca8:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x1cac:   48 89 c7                     	mov rdi, rax
0x1caf:   e8 5c f5 ff ff               	call 0x1210 <shmdt>
0x1cb4:   c9                           	leave 
0x1cb5:   c3                           	ret 
; function: semCreate at 0x1cb6 -- 0x1ce3
0x1cb6:   f3 0f 1e fa                  	endbr64 
0x1cba:   55                           	push rbp
0x1cbb:   48 89 e5                     	mov rbp, rsp
0x1cbe:   48 83 ec 10                  	sub rsp, 0x10
0x1cc2:   89 7d fc                     	mov dword ptr [rbp - 4], edi
0x1cc5:   89 75 f8                     	mov dword ptr [rbp - 8], esi
0x1cc8:   8b 45 f8                     	mov eax, dword ptr [rbp - 8]
0x1ccb:   83 c0 01                     	add eax, 1
0x1cce:   89 c1                        	mov ecx, eax
0x1cd0:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x1cd3:   ba 80 07 00 00               	mov edx, 0x780
0x1cd8:   89 ce                        	mov esi, ecx
0x1cda:   89 c7                        	mov edi, eax
0x1cdc:   e8 ff f4 ff ff               	call 0x11e0 <semget>
0x1ce1:   c9                           	leave 
0x1ce2:   c3                           	ret 
; function: semConnect at 0x1ce3 -- 0x1d84
0x1ce3:   f3 0f 1e fa                  	endbr64 
0x1ce7:   55                           	push rbp
0x1ce8:   48 89 e5                     	mov rbp, rsp
0x1ceb:   48 83 ec 30                  	sub rsp, 0x30
0x1cef:   89 7d dc                     	mov dword ptr [rbp - 0x24], edi
0x1cf2:   64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x1cfb:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x1cff:   31 c0                        	xor eax, eax
0x1d01:   66 c7 45 ec 00 00            	mov word ptr [rbp - 0x14], 0
0x1d07:   66 c7 45 ee ff ff            	mov word ptr [rbp - 0x12], 0xffff
0x1d0d:   66 c7 45 f0 00 00            	mov word ptr [rbp - 0x10], 0
0x1d13:   66 c7 45 f2 00 00            	mov word ptr [rbp - 0xe], 0
0x1d19:   66 c7 45 f4 01 00            	mov word ptr [rbp - 0xc], 1
0x1d1f:   66 c7 45 f6 00 00            	mov word ptr [rbp - 0xa], 0
0x1d25:   8b 45 dc                     	mov eax, dword ptr [rbp - 0x24]
0x1d28:   ba 80 01 00 00               	mov edx, 0x180
0x1d2d:   be 01 00 00 00               	mov esi, 1
0x1d32:   89 c7                        	mov edi, eax
0x1d34:   e8 a7 f4 ff ff               	call 0x11e0 <semget>
0x1d39:   89 45 e8                     	mov dword ptr [rbp - 0x18], eax
0x1d3c:   83 7d e8 ff                  	cmp dword ptr [rbp - 0x18], -1
0x1d40:   75 07                        	jne 0x1d49 <semConnect+0x66>
0x1d42:   b8 ff ff ff ff               	mov eax, 0xffffffff
0x1d47:   eb 25                        	jmp 0x1d6e <semConnect+0x8b>
0x1d49:   48 8d 4d ec                  	lea rcx, [rbp - 0x14]
0x1d4d:   8b 45 e8                     	mov eax, dword ptr [rbp - 0x18]
0x1d50:   ba 02 00 00 00               	mov edx, 2
0x1d55:   48 89 ce                     	mov rsi, rcx
0x1d58:   89 c7                        	mov edi, eax
0x1d5a:   e8 d1 f5 ff ff               	call 0x1330 <semop>
0x1d5f:   83 f8 ff                     	cmp eax, -1
0x1d62:   75 07                        	jne 0x1d6b <semConnect+0x88>
0x1d64:   b8 ff ff ff ff               	mov eax, 0xffffffff
0x1d69:   eb 03                        	jmp 0x1d6e <semConnect+0x8b>
0x1d6b:   8b 45 e8                     	mov eax, dword ptr [rbp - 0x18]
0x1d6e:   48 8b 55 f8                  	mov rdx, qword ptr [rbp - 8]
0x1d72:   64 48 33 14 25 28 00 00 00   	xor rdx, qword ptr fs:[0x28]
0x1d7b:   74 05                        	je 0x1d82 <semConnect+0x9f>
0x1d7d:   e8 be f4 ff ff               	call 0x1240 <__stack_chk_fail>
0x1d82:   c9                           	leave 
0x1d83:   c3                           	ret 
; function: semDestroy at 0x1d84 -- 0x1db3
0x1d84:   f3 0f 1e fa                  	endbr64 
0x1d88:   55                           	push rbp
0x1d89:   48 89 e5                     	mov rbp, rsp
0x1d8c:   48 83 ec 10                  	sub rsp, 0x10
0x1d90:   89 7d fc                     	mov dword ptr [rbp - 4], edi
0x1d93:   8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0x1d96:   b9 00 00 00 00               	mov ecx, 0
0x1d9b:   ba 00 00 00 00               	mov edx, 0
0x1da0:   be 00 00 00 00               	mov esi, 0
0x1da5:   89 c7                        	mov edi, eax
0x1da7:   b8 00 00 00 00               	mov eax, 0
0x1dac:   e8 4f f5 ff ff               	call 0x1300 <semctl>
0x1db1:   c9                           	leave 
0x1db2:   c3                           	ret 
; function: semSignal at 0x1db3 -- 0x1e0f
0x1db3:   f3 0f 1e fa                  	endbr64 
0x1db7:   55                           	push rbp
0x1db8:   48 89 e5                     	mov rbp, rsp
0x1dbb:   48 83 ec 20                  	sub rsp, 0x20
0x1dbf:   89 7d ec                     	mov dword ptr [rbp - 0x14], edi
0x1dc2:   64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x1dcb:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x1dcf:   31 c0                        	xor eax, eax
0x1dd1:   66 c7 45 f2 00 00            	mov word ptr [rbp - 0xe], 0
0x1dd7:   66 c7 45 f4 01 00            	mov word ptr [rbp - 0xc], 1
0x1ddd:   66 c7 45 f6 00 00            	mov word ptr [rbp - 0xa], 0
0x1de3:   48 8d 4d f2                  	lea rcx, [rbp - 0xe]
0x1de7:   8b 45 ec                     	mov eax, dword ptr [rbp - 0x14]
0x1dea:   ba 01 00 00 00               	mov edx, 1
0x1def:   48 89 ce                     	mov rsi, rcx
0x1df2:   89 c7                        	mov edi, eax
0x1df4:   e8 37 f5 ff ff               	call 0x1330 <semop>
0x1df9:   48 8b 55 f8                  	mov rdx, qword ptr [rbp - 8]
0x1dfd:   64 48 33 14 25 28 00 00 00   	xor rdx, qword ptr fs:[0x28]
0x1e06:   74 05                        	je 0x1e0d <semSignal+0x5a>
0x1e08:   e8 33 f4 ff ff               	call 0x1240 <__stack_chk_fail>
0x1e0d:   c9                           	leave 
0x1e0e:   c3                           	ret 
; function: semDown at 0x1e0f -- 0x1e9a
0x1e0f:   f3 0f 1e fa                  	endbr64 
0x1e13:   55                           	push rbp
0x1e14:   48 89 e5                     	mov rbp, rsp
0x1e17:   48 83 ec 20                  	sub rsp, 0x20
0x1e1b:   89 7d ec                     	mov dword ptr [rbp - 0x14], edi
0x1e1e:   89 75 e8                     	mov dword ptr [rbp - 0x18], esi
0x1e21:   64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x1e2a:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x1e2e:   31 c0                        	xor eax, eax
0x1e30:   66 c7 45 f2 00 00            	mov word ptr [rbp - 0xe], 0
0x1e36:   66 c7 45 f4 ff ff            	mov word ptr [rbp - 0xc], 0xffff
0x1e3c:   66 c7 45 f6 00 00            	mov word ptr [rbp - 0xa], 0
0x1e42:   83 7d e8 00                  	cmp dword ptr [rbp - 0x18], 0
0x1e46:   75 1f                        	jne 0x1e67 <semDown+0x58>
0x1e48:   48 8d 0d c9 13 00 00         	lea rcx, [rip + 0x13c9]
0x1e4f:   ba 75 00 00 00               	mov edx, 0x75
0x1e54:   48 8d 35 a5 13 00 00         	lea rsi, [rip + 0x13a5]
0x1e5b:   48 8d 3d aa 13 00 00         	lea rdi, [rip + 0x13aa]
0x1e62:   e8 f9 f3 ff ff               	call 0x1260 <__assert_fail>
0x1e67:   8b 45 e8                     	mov eax, dword ptr [rbp - 0x18]
0x1e6a:   66 89 45 f2                  	mov word ptr [rbp - 0xe], ax
0x1e6e:   48 8d 4d f2                  	lea rcx, [rbp - 0xe]
0x1e72:   8b 45 ec                     	mov eax, dword ptr [rbp - 0x14]
0x1e75:   ba 01 00 00 00               	mov edx, 1
0x1e7a:   48 89 ce                     	mov rsi, rcx
0x1e7d:   89 c7                        	mov edi, eax
0x1e7f:   e8 ac f4 ff ff               	call 0x1330 <semop>
0x1e84:   48 8b 55 f8                  	mov rdx, qword ptr [rbp - 8]
0x1e88:   64 48 33 14 25 28 00 00 00   	xor rdx, qword ptr fs:[0x28]
0x1e91:   74 05                        	je 0x1e98 <semDown+0x89>
0x1e93:   e8 a8 f3 ff ff               	call 0x1240 <__stack_chk_fail>
0x1e98:   c9                           	leave 
0x1e99:   c3                           	ret 
; function: semUp at 0x1e9a -- 0x1f25
0x1e9a:   f3 0f 1e fa                  	endbr64 
0x1e9e:   55                           	push rbp
0x1e9f:   48 89 e5                     	mov rbp, rsp
0x1ea2:   48 83 ec 20                  	sub rsp, 0x20
0x1ea6:   89 7d ec                     	mov dword ptr [rbp - 0x14], edi
0x1ea9:   89 75 e8                     	mov dword ptr [rbp - 0x18], esi
0x1eac:   64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x1eb5:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x1eb9:   31 c0                        	xor eax, eax
0x1ebb:   66 c7 45 f2 00 00            	mov word ptr [rbp - 0xe], 0
0x1ec1:   66 c7 45 f4 01 00            	mov word ptr [rbp - 0xc], 1
0x1ec7:   66 c7 45 f6 00 00            	mov word ptr [rbp - 0xa], 0
0x1ecd:   83 7d e8 00                  	cmp dword ptr [rbp - 0x18], 0
0x1ed1:   75 1f                        	jne 0x1ef2 <semUp+0x58>
0x1ed3:   48 8d 0d 46 13 00 00         	lea rcx, [rip + 0x1346]
0x1eda:   ba 8a 00 00 00               	mov edx, 0x8a
0x1edf:   48 8d 35 1a 13 00 00         	lea rsi, [rip + 0x131a]
0x1ee6:   48 8d 3d 1f 13 00 00         	lea rdi, [rip + 0x131f]
0x1eed:   e8 6e f3 ff ff               	call 0x1260 <__assert_fail>
0x1ef2:   8b 45 e8                     	mov eax, dword ptr [rbp - 0x18]
0x1ef5:   66 89 45 f2                  	mov word ptr [rbp - 0xe], ax
0x1ef9:   48 8d 4d f2                  	lea rcx, [rbp - 0xe]
0x1efd:   8b 45 ec                     	mov eax, dword ptr [rbp - 0x14]
0x1f00:   ba 01 00 00 00               	mov edx, 1
0x1f05:   48 89 ce                     	mov rsi, rcx
0x1f08:   89 c7                        	mov edi, eax
0x1f0a:   e8 21 f4 ff ff               	call 0x1330 <semop>
0x1f0f:   48 8b 55 f8                  	mov rdx, qword ptr [rbp - 8]
0x1f13:   64 48 33 14 25 28 00 00 00   	xor rdx, qword ptr fs:[0x28]
0x1f1c:   74 05                        	je 0x1f23 <semUp+0x89>
0x1f1e:   e8 1d f3 ff ff               	call 0x1240 <__stack_chk_fail>
0x1f23:   c9                           	leave 
0x1f24:   c3                           	ret 
; function: openLog at 0x1f25 -- 0x1fc8
0x1f25:   f3 0f 1e fa                  	endbr64 
0x1f29:   55                           	push rbp
0x1f2a:   48 89 e5                     	mov rbp, rsp
0x1f2d:   48 83 ec 20                  	sub rsp, 0x20
0x1f31:   48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0x1f35:   48 89 75 e0                  	mov qword ptr [rbp - 0x20], rsi
0x1f39:   48 83 7d e8 00               	cmp qword ptr [rbp - 0x18], 0
0x1f3e:   74 0b                        	je 0x1f4b <openLog+0x26>
0x1f40:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x1f44:   0f b6 00                     	movzx eax, byte ptr [rax]
0x1f47:   84 c0                        	test al, al
0x1f49:   75 09                        	jne 0x1f54 <openLog+0x2f>
0x1f4b:   48 8b 05 ce 30 00 00         	mov rax, qword ptr [rip + 0x30ce]
0x1f52:   eb 72                        	jmp 0x1fc6 <openLog+0xa1>
0x1f54:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x1f58:   48 89 45 f0                  	mov qword ptr [rbp - 0x10], rax
0x1f5c:   e8 bf f2 ff ff               	call 0x1220 <getpid>
0x1f61:   89 c6                        	mov esi, eax
0x1f63:   48 8b 05 d6 30 00 00         	mov rax, qword ptr [rip + 0x30d6]
0x1f6a:   48 8b 4d e0                  	mov rcx, qword ptr [rbp - 0x20]
0x1f6e:   48 8b 55 e8                  	mov rdx, qword ptr [rbp - 0x18]
0x1f72:   49 89 c8                     	mov r8, rcx
0x1f75:   48 89 d1                     	mov rcx, rdx
0x1f78:   89 f2                        	mov edx, esi
0x1f7a:   48 8d 35 a7 12 00 00         	lea rsi, [rip + 0x12a7]
0x1f81:   48 89 c7                     	mov rdi, rax
0x1f84:   b8 00 00 00 00               	mov eax, 0
0x1f89:   e8 02 f3 ff ff               	call 0x1290 <fprintf>
0x1f8e:   48 8b 55 e0                  	mov rdx, qword ptr [rbp - 0x20]
0x1f92:   48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0x1f96:   48 89 d6                     	mov rsi, rdx
0x1f99:   48 89 c7                     	mov rdi, rax
0x1f9c:   e8 3f f3 ff ff               	call 0x12e0 <fopen>
0x1fa1:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x1fa5:   48 83 7d f8 00               	cmp qword ptr [rbp - 8], 0
0x1faa:   75 16                        	jne 0x1fc2 <openLog+0x9d>
0x1fac:   48 8d 3d 8b 12 00 00         	lea rdi, [rip + 0x128b]
0x1fb3:   e8 38 f3 ff ff               	call 0x12f0 <perror>
0x1fb8:   bf 01 00 00 00               	mov edi, 1
0x1fbd:   e8 7e f3 ff ff               	call 0x1340 <exit>
0x1fc2:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x1fc6:   c9                           	leave 
0x1fc7:   c3                           	ret 
; function: closeLog at 0x1fc8 -- 0x2029
0x1fc8:   f3 0f 1e fa                  	endbr64 
0x1fcc:   55                           	push rbp
0x1fcd:   48 89 e5                     	mov rbp, rsp
0x1fd0:   48 83 ec 10                  	sub rsp, 0x10
0x1fd4:   48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0x1fd8:   48 8b 05 61 30 00 00         	mov rax, qword ptr [rip + 0x3061]
0x1fdf:   48 39 45 f8                  	cmp qword ptr [rbp - 8], rax
0x1fe3:   74 0d                        	je 0x1ff2 <closeLog+0x2a>
0x1fe5:   48 8b 05 34 30 00 00         	mov rax, qword ptr [rip + 0x3034]
0x1fec:   48 39 45 f8                  	cmp qword ptr [rbp - 8], rax
0x1ff0:   75 0e                        	jne 0x2000 <closeLog+0x38>
0x1ff2:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x1ff6:   48 89 c7                     	mov rdi, rax
0x1ff9:   e8 c2 f2 ff ff               	call 0x12c0 <fflush>
0x1ffe:   eb 27                        	jmp 0x2027 <closeLog+0x5f>
0x2000:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x2004:   48 89 c7                     	mov rdi, rax
0x2007:   e8 24 f2 ff ff               	call 0x1230 <fclose>
0x200c:   83 f8 ff                     	cmp eax, -1
0x200f:   75 16                        	jne 0x2027 <closeLog+0x5f>
0x2011:   48 8d 3d 40 12 00 00         	lea rdi, [rip + 0x1240]
0x2018:   e8 d3 f2 ff ff               	call 0x12f0 <perror>
0x201d:   bf 01 00 00 00               	mov edi, 1
0x2022:   e8 19 f3 ff ff               	call 0x1340 <exit>
0x2027:   c9                           	leave 
0x2028:   c3                           	ret 
; function: printHeader at 0x2029 -- 0x2122
0x2029:   f3 0f 1e fa                  	endbr64 
0x202d:   55                           	push rbp
0x202e:   48 89 e5                     	mov rbp, rsp
0x2031:   48 83 ec 20                  	sub rsp, 0x20
0x2035:   48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0x2039:   48 89 75 e0                  	mov qword ptr [rbp - 0x20], rsi
0x203d:   c7 45 f8 00 00 00 00         	mov dword ptr [rbp - 8], 0
0x2044:   eb 28                        	jmp 0x206e <printHeader+0x45>
0x2046:   8b 55 f8                     	mov edx, dword ptr [rbp - 8]
0x2049:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x204d:   89 d1                        	mov ecx, edx
0x204f:   48 8d 15 1f 12 00 00         	lea rdx, [rip + 0x121f]
0x2056:   48 8d 35 1a 12 00 00         	lea rsi, [rip + 0x121a]
0x205d:   48 89 c7                     	mov rdi, rax
0x2060:   b8 00 00 00 00               	mov eax, 0
0x2065:   e8 26 f2 ff ff               	call 0x1290 <fprintf>
0x206a:   83 45 f8 01                  	add dword ptr [rbp - 8], 1
0x206e:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x2072:   8b 40 38                     	mov eax, dword ptr [rax + 0x38]
0x2075:   39 45 f8                     	cmp dword ptr [rbp - 8], eax
0x2078:   7c cc                        	jl 0x2046 <printHeader+0x1d>
0x207a:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x207e:   48 89 c6                     	mov rsi, rax
0x2081:   bf 20 00 00 00               	mov edi, 0x20
0x2086:   e8 f5 f1 ff ff               	call 0x1280 <fputc>
0x208b:   c7 45 fc 00 00 00 00         	mov dword ptr [rbp - 4], 0
0x2092:   eb 28                        	jmp 0x20bc <printHeader+0x93>
0x2094:   8b 55 fc                     	mov edx, dword ptr [rbp - 4]
0x2097:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x209b:   89 d1                        	mov ecx, edx
0x209d:   48 8d 15 db 11 00 00         	lea rdx, [rip + 0x11db]
0x20a4:   48 8d 35 cc 11 00 00         	lea rsi, [rip + 0x11cc]
0x20ab:   48 89 c7                     	mov rdi, rax
0x20ae:   b8 00 00 00 00               	mov eax, 0
0x20b3:   e8 d8 f1 ff ff               	call 0x1290 <fprintf>
0x20b8:   83 45 fc 01                  	add dword ptr [rbp - 4], 1
0x20bc:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x20c0:   8b 40 3c                     	mov eax, dword ptr [rax + 0x3c]
0x20c3:   39 45 fc                     	cmp dword ptr [rbp - 4], eax
0x20c6:   7c cc                        	jl 0x2094 <printHeader+0x6b>
0x20c8:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x20cc:   48 89 c6                     	mov rsi, rax
0x20cf:   bf 20 00 00 00               	mov edi, 0x20
0x20d4:   e8 a7 f1 ff ff               	call 0x1280 <fputc>
0x20d9:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x20dd:   b9 01 00 00 00               	mov ecx, 1
0x20e2:   48 8d 15 98 11 00 00         	lea rdx, [rip + 0x1198]
0x20e9:   48 8d 35 87 11 00 00         	lea rsi, [rip + 0x1187]
0x20f0:   48 89 c7                     	mov rdi, rax
0x20f3:   b8 00 00 00 00               	mov eax, 0
0x20f8:   e8 93 f1 ff ff               	call 0x1290 <fprintf>
0x20fd:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x2101:   48 89 c6                     	mov rsi, rax
0x2104:   bf 20 00 00 00               	mov edi, 0x20
0x2109:   e8 72 f1 ff ff               	call 0x1280 <fputc>
0x210e:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x2112:   48 89 c6                     	mov rsi, rax
0x2115:   bf 0a 00 00 00               	mov edi, 0xa
0x211a:   e8 61 f1 ff ff               	call 0x1280 <fputc>
0x211f:   90                           	nop 
0x2120:   c9                           	leave 
0x2121:   c3                           	ret 
; function: createLog at 0x2122 -- 0x218c
0x2122:   f3 0f 1e fa                  	endbr64 
0x2126:   55                           	push rbp
0x2127:   48 89 e5                     	mov rbp, rsp
0x212a:   48 83 ec 20                  	sub rsp, 0x20
0x212e:   48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0x2132:   48 89 75 e0                  	mov qword ptr [rbp - 0x20], rsi
0x2136:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x213a:   48 8d 35 42 11 00 00         	lea rsi, [rip + 0x1142]
0x2141:   48 89 c7                     	mov rdi, rax
0x2144:   e8 dc fd ff ff               	call 0x1f25 <openLog>
0x2149:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x214d:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x2151:   ba 20 00 00 00               	mov edx, 0x20
0x2156:   48 8d 35 2b 11 00 00         	lea rsi, [rip + 0x112b]
0x215d:   48 89 c7                     	mov rdi, rax
0x2160:   b8 00 00 00 00               	mov eax, 0
0x2165:   e8 26 f1 ff ff               	call 0x1290 <fprintf>
0x216a:   48 8b 55 e0                  	mov rdx, qword ptr [rbp - 0x20]
0x216e:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x2172:   48 89 d6                     	mov rsi, rdx
0x2175:   48 89 c7                     	mov rdi, rax
0x2178:   e8 ac fe ff ff               	call 0x2029 <printHeader>
0x217d:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x2181:   48 89 c7                     	mov rdi, rax
0x2184:   e8 3f fe ff ff               	call 0x1fc8 <closeLog>
0x2189:   90                           	nop 
0x218a:   c9                           	leave 
0x218b:   c3                           	ret 
; function: saveState at 0x218c -- 0x2299
0x218c:   f3 0f 1e fa                  	endbr64 
0x2190:   55                           	push rbp
0x2191:   48 89 e5                     	mov rbp, rsp
0x2194:   48 83 ec 20                  	sub rsp, 0x20
0x2198:   48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0x219c:   48 89 75 e0                  	mov qword ptr [rbp - 0x20], rsi
0x21a0:   48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0x21a4:   48 8d 35 12 11 00 00         	lea rsi, [rip + 0x1112]
0x21ab:   48 89 c7                     	mov rdi, rax
0x21ae:   e8 72 fd ff ff               	call 0x1f25 <openLog>
0x21b3:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x21b7:   c7 45 f0 00 00 00 00         	mov dword ptr [rbp - 0x10], 0
0x21be:   eb 29                        	jmp 0x21e9 <saveState+0x5d>
0x21c0:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x21c4:   8b 55 f0                     	mov edx, dword ptr [rbp - 0x10]
0x21c7:   48 63 d2                     	movsxd rdx, edx
0x21ca:   8b 14 90                     	mov edx, dword ptr [rax + rdx*4]
0x21cd:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x21d1:   48 8d 35 e7 10 00 00         	lea rsi, [rip + 0x10e7]
0x21d8:   48 89 c7                     	mov rdi, rax
0x21db:   b8 00 00 00 00               	mov eax, 0
0x21e0:   e8 ab f0 ff ff               	call 0x1290 <fprintf>
0x21e5:   83 45 f0 01                  	add dword ptr [rbp - 0x10], 1
0x21e9:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x21ed:   8b 40 38                     	mov eax, dword ptr [rax + 0x38]
0x21f0:   39 45 f0                     	cmp dword ptr [rbp - 0x10], eax
0x21f3:   7c cb                        	jl 0x21c0 <saveState+0x34>
0x21f5:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x21f9:   48 89 c6                     	mov rsi, rax
0x21fc:   bf 20 00 00 00               	mov edi, 0x20
0x2201:   e8 7a f0 ff ff               	call 0x1280 <fputc>
0x2206:   c7 45 f4 00 00 00 00         	mov dword ptr [rbp - 0xc], 0
0x220d:   eb 2e                        	jmp 0x223d <saveState+0xb1>
0x220f:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x2213:   8b 55 f4                     	mov edx, dword ptr [rbp - 0xc]
0x2216:   48 63 d2                     	movsxd rdx, edx
0x2219:   48 83 c2 08                  	add rdx, 8
0x221d:   8b 54 90 08                  	mov edx, dword ptr [rax + rdx*4 + 8]
0x2221:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x2225:   48 8d 35 93 10 00 00         	lea rsi, [rip + 0x1093]
0x222c:   48 89 c7                     	mov rdi, rax
0x222f:   b8 00 00 00 00               	mov eax, 0
0x2234:   e8 57 f0 ff ff               	call 0x1290 <fprintf>
0x2239:   83 45 f4 01                  	add dword ptr [rbp - 0xc], 1
0x223d:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x2241:   8b 40 3c                     	mov eax, dword ptr [rax + 0x3c]
0x2244:   39 45 f4                     	cmp dword ptr [rbp - 0xc], eax
0x2247:   7c c6                        	jl 0x220f <saveState+0x83>
0x2249:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x224d:   48 89 c6                     	mov rsi, rax
0x2250:   bf 20 00 00 00               	mov edi, 0x20
0x2255:   e8 26 f0 ff ff               	call 0x1280 <fputc>
0x225a:   48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0x225e:   8b 50 34                     	mov edx, dword ptr [rax + 0x34]
0x2261:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x2265:   48 8d 35 53 10 00 00         	lea rsi, [rip + 0x1053]
0x226c:   48 89 c7                     	mov rdi, rax
0x226f:   b8 00 00 00 00               	mov eax, 0
0x2274:   e8 17 f0 ff ff               	call 0x1290 <fprintf>
0x2279:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x227d:   48 89 c6                     	mov rsi, rax
0x2280:   bf 0a 00 00 00               	mov edi, 0xa
0x2285:   e8 f6 ef ff ff               	call 0x1280 <fputc>
0x228a:   48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0x228e:   48 89 c7                     	mov rdi, rax
0x2291:   e8 32 fd ff ff               	call 0x1fc8 <closeLog>
0x2296:   90                           	nop 
0x2297:   c9                           	leave 
0x2298:   c3                           	ret 
; data inside code section at 0x2299 -- 0x22a0
0x2299:   0f 1f 80 00 00 00 00                               |.......         |
; function: __libc_csu_init at 0x22a0 -- 0x2305
0x22a0:   f3 0f 1e fa                  	endbr64 
0x22a4:   41 57                        	push r15
0x22a6:   4c 8d 3d 43 2a 00 00         	lea r15, [rip + 0x2a43]
0x22ad:   41 56                        	push r14
0x22af:   49 89 d6                     	mov r14, rdx
0x22b2:   41 55                        	push r13
0x22b4:   49 89 f5                     	mov r13, rsi
0x22b7:   41 54                        	push r12
0x22b9:   41 89 fc                     	mov r12d, edi
0x22bc:   55                           	push rbp
0x22bd:   48 8d 2d 34 2a 00 00         	lea rbp, [rip + 0x2a34]
0x22c4:   53                           	push rbx
0x22c5:   4c 29 fd                     	sub rbp, r15
0x22c8:   48 83 ec 08                  	sub rsp, 8
0x22cc:   e8 2f ed ff ff               	call 0x1000 <_init>
0x22d1:   48 c1 fd 03                  	sar rbp, 3
0x22d5:   74 1f                        	je 0x22f6 <__libc_csu_init+0x56>
0x22d7:   31 db                        	xor ebx, ebx
0x22d9:   0f 1f 80 00 00 00 00         	nop dword ptr [rax]
0x22e0:   4c 89 f2                     	mov rdx, r14
0x22e3:   4c 89 ee                     	mov rsi, r13
0x22e6:   44 89 e7                     	mov edi, r12d
0x22e9:   41 ff 14 df                  	call qword ptr [r15 + rbx*8]
0x22ed:   48 83 c3 01                  	add rbx, 1
0x22f1:   48 39 dd                     	cmp rbp, rbx
0x22f4:   75 ea                        	jne 0x22e0 <__libc_csu_init+0x40>
0x22f6:   48 83 c4 08                  	add rsp, 8
0x22fa:   5b                           	pop rbx
0x22fb:   5d                           	pop rbp
0x22fc:   41 5c                        	pop r12
0x22fe:   41 5d                        	pop r13
0x2300:   41 5e                        	pop r14
0x2302:   41 5f                        	pop r15
0x2304:   c3                           	ret 
; data inside code section at 0x2305 -- 0x2310
0x2305:   66 66 2e 0f 1f 84 00 00  00 00 00                  |ff.........     |
; function: __libc_csu_fini at 0x2310 -- 0x2315
0x2310:   f3 0f 1e fa                  	endbr64 
0x2314:   c3                           	ret 
; section: .fini
; function: _fini at 0x2318 -- 0x2325
0x2318:   f3 0f 1e fa                  	endbr64 
0x231c:   48 83 ec 08                  	sub rsp, 8
0x2320:   48 83 c4 08                  	add rsp, 8
0x2324:   c3                           	ret 

;;
;; Data Segment
;;

; section: .interp
0x318:    2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x328:    78 38 36 2d 36 34 2e 73  6f 2e 32 00 ??            |x86-64.so.2.?   |
; section: .gnu.hash
0x3a0:    03 00 00 00 1f 00 00 00  01 00 00 00 06 00 00 00   |................|
0x3b0:    00 01 81 00 00 01 10 02  1f 00 00 00 21 00 00 00   |............!...|
0x3c0:    00 00 00 00 28 1d 8c 1c  d1 65 ce 6d 39 f2 8b 1c   |....(....e.m9...|
0x3d0:    00                                                 |.               |
; section: .dynsym
0x3d0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3e0:    00 00 00 00 00 00 00 00  ed 00 00 00 12 00 00 00   |................|
0x3f0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400:    af 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x410:    00 00 00 00 00 00 00 00  0a 01 00 00 20 00 00 00   |............ ...|
0x420:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x430:    12 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x440:    00 00 00 00 00 00 00 00  57 00 00 00 12 00 00 00   |........W.......|
0x450:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x460:    5d 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |]...............|
0x470:    00 00 00 00 00 00 00 00  8b 00 00 00 12 00 00 00   |................|
0x480:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x490:    3f 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |?...............|
0x4a0:    00 00 00 00 00 00 00 00  ce 00 00 00 12 00 00 00   |................|
0x4b0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4c0:    64 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |d...............|
0x4d0:    00 00 00 00 00 00 00 00  99 00 00 00 12 00 00 00   |................|
0x4e0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4f0:    85 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x500:    00 00 00 00 00 00 00 00  d5 00 00 00 12 00 00 00   |................|
0x510:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x520:    b7 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x530:    00 00 00 00 00 00 00 00  26 01 00 00 20 00 00 00   |........&... ...|
0x540:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x550:    72 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |r...............|
0x560:    00 00 00 00 00 00 00 00  b0 00 00 00 12 00 00 00   |................|
0x570:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x580:    0b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x590:    00 00 00 00 00 00 00 00  50 00 00 00 12 00 00 00   |........P.......|
0x5a0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5b0:    25 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |%...............|
0x5c0:    00 00 00 00 00 00 00 00  2b 00 00 00 12 00 00 00   |........+.......|
0x5d0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5e0:    38 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |8...............|
0x5f0:    00 00 00 00 00 00 00 00  32 00 00 00 12 00 00 00   |........2.......|
0x600:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x610:    19 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x620:    00 00 00 00 00 00 00 00  e7 00 00 00 12 00 00 00   |................|
0x630:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x640:    20 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   | ...............|
0x650:    00 00 00 00 00 00 00 00  a8 00 00 00 12 00 00 00   |................|
0x660:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x670:    35 01 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |5... ...........|
0x680:    00 00 00 00 00 00 00 00  79 00 00 00 12 00 00 00   |........y.......|
0x690:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6a0:    a1 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6b0:    00 00 00 00 00 00 00 00  7e 00 00 00 11 00 1a 00   |........~.......|
0x6c0:    20 50 00 00 00 00 00 00  08 00 00 00 00 00 00 00   | P..............|
0x6d0:    bf 00 00 00 22 00 00 00  00 00 00 00 00 00 00 00   |...."...........|
0x6e0:    00 00 00 00 00 00 00 00  92 00 00 00 11 00 1a 00   |................|
0x6f0:    40 50 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |@P..............|
0x700:    00                                                 |.               |
; section: .dynstr
0x700:    00 6c 69 62 63 2e 73 6f  2e 36 00 66 66 6c 75 73   |.libc.so.6.fflus|
0x710:    68 00 73 74 72 63 70 79  00 73 68 6d 67 65 74 00   |h.strcpy.shmget.|
0x720:    65 78 69 74 00 66 6f 70  65 6e 00 70 65 72 72 6f   |exit.fopen.perro|
0x730:    72 00 73 68 6d 61 74 00  73 65 6d 63 74 6c 00 5f   |r.shmat.semctl._|
0x740:    5f 73 74 61 63 6b 5f 63  68 6b 5f 66 61 69 6c 00   |_stack_chk_fail.|
0x750:    73 68 6d 63 74 6c 00 73  68 6d 64 74 00 67 65 74   |shmctl.shmdt.get|
0x760:    70 69 64 00 5f 5f 61 73  73 65 72 74 5f 66 61 69   |pid.__assert_fai|
0x770:    6c 00 73 74 72 74 6f 6c  00 66 74 6f 6b 00 73 74   |l.strtol.ftok.st|
0x780:    64 6f 75 74 00 66 70 75  74 63 00 66 63 6c 6f 73   |dout.fputc.fclos|
0x790:    65 00 73 74 64 65 72 72  00 66 72 65 6f 70 65 6e   |e.stderr.freopen|
0x7a0:    00 75 73 6c 65 65 70 00  66 77 72 69 74 65 00 73   |.usleep.fwrite.s|
0x7b0:    72 61 6e 64 6f 6d 00 66  70 72 69 6e 74 66 00 5f   |random.fprintf._|
0x7c0:    5f 63 78 61 5f 66 69 6e  61 6c 69 7a 65 00 73 65   |_cxa_finalize.se|
0x7d0:    74 62 75 66 00 5f 5f 6c  69 62 63 5f 73 74 61 72   |tbuf.__libc_star|
0x7e0:    74 5f 6d 61 69 6e 00 73  65 6d 6f 70 00 73 65 6d   |t_main.semop.sem|
0x7f0:    67 65 74 00 47 4c 49 42  43 5f 32 2e 34 00 47 4c   |get.GLIBC_2.4.GL|
0x800:    49 42 43 5f 32 2e 32 2e  35 00 5f 49 54 4d 5f 64   |IBC_2.2.5._ITM_d|
0x810:    65 72 65 67 69 73 74 65  72 54 4d 43 6c 6f 6e 65   |eregisterTMClone|
0x820:    54 61 62 6c 65 00 5f 5f  67 6d 6f 6e 5f 73 74 61   |Table.__gmon_sta|
0x830:    72 74 5f 5f 00 5f 49 54  4d 5f 72 65 67 69 73 74   |rt__._ITM_regist|
0x840:    65 72 54 4d 43 6c 6f 6e  65 54 61 62 6c 65 00 ??   |erTMCloneTable.?|
; section: .gnu.version
0x850:    00 00 02 00 02 00 00 00  02 00 02 00 02 00 02 00   |................|
0x860:    03 00 02 00 02 00 02 00  02 00 02 00 02 00 00 00   |................|
0x870:    02 00 02 00 02 00 02 00  02 00 02 00 02 00 02 00   |................|
0x880:    02 00 02 00 02 00 02 00  00 00 02 00 02 00 02 00   |................|
0x890:    02 00 02 00 ??                                     |....?           |
; section: .gnu.version_r
0x898:    01 00 02 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x8a8:    14 69 69 0d 00 00 03 00  f4 00 00 00 10 00 00 00   |.ii.............|
0x8b8:    75 1a 69 09 00 00 02 00  fe 00 00 00 00 00 00 00   |u.i.............|
0x8c8:    f0                                                 |.               |
; section: .rela.dyn
0x8c8:    f0 4c 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.L..............|
0x8d8:    60 14 00 00 00 00 00 00  f8 4c 00 00 00 00 00 00   |`........L......|
0x8e8:    08 00 00 00 00 00 00 00  20 14 00 00 00 00 00 00   |........ .......|
0x8f8:    08 50 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |.P..............|
0x908:    08 50 00 00 00 00 00 00  d8 4f 00 00 00 00 00 00   |.P.......O......|
0x918:    06 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x928:    e0 4f 00 00 00 00 00 00  06 00 00 00 0d 00 00 00   |.O..............|
0x938:    00 00 00 00 00 00 00 00  e8 4f 00 00 00 00 00 00   |.........O......|
0x948:    06 00 00 00 0f 00 00 00  00 00 00 00 00 00 00 00   |................|
0x958:    f0 4f 00 00 00 00 00 00  06 00 00 00 1c 00 00 00   |.O..............|
0x968:    00 00 00 00 00 00 00 00  f8 4f 00 00 00 00 00 00   |.........O......|
0x978:    06 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x988:    20 50 00 00 00 00 00 00  05 00 00 00 1f 00 00 00   | P..............|
0x998:    00 00 00 00 00 00 00 00  40 50 00 00 00 00 00 00   |........@P......|
0x9a8:    05 00 00 00 21 00 00 00  00 00 00 00 00 00 00 00   |....!...........|
0x9b8:    08                                                 |.               |
; section: .rela.plt
0x9b8:    08 4f 00 00 00 00 00 00  07 00 00 00 01 00 00 00   |.O..............|
0x9c8:    00 00 00 00 00 00 00 00  10 4f 00 00 00 00 00 00   |.........O......|
0x9d8:    07 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0x9e8:    18 4f 00 00 00 00 00 00  07 00 00 00 04 00 00 00   |.O..............|
0x9f8:    00 00 00 00 00 00 00 00  20 4f 00 00 00 00 00 00   |........ O......|
0xa08:    07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0xa18:    28 4f 00 00 00 00 00 00  07 00 00 00 06 00 00 00   |(O..............|
0xa28:    00 00 00 00 00 00 00 00  30 4f 00 00 00 00 00 00   |........0O......|
0xa38:    07 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0xa48:    38 4f 00 00 00 00 00 00  07 00 00 00 08 00 00 00   |8O..............|
0xa58:    00 00 00 00 00 00 00 00  40 4f 00 00 00 00 00 00   |........@O......|
0xa68:    07 00 00 00 09 00 00 00  00 00 00 00 00 00 00 00   |................|
0xa78:    48 4f 00 00 00 00 00 00  07 00 00 00 0a 00 00 00   |HO..............|
0xa88:    00 00 00 00 00 00 00 00  50 4f 00 00 00 00 00 00   |........PO......|
0xa98:    07 00 00 00 0b 00 00 00  00 00 00 00 00 00 00 00   |................|
0xaa8:    58 4f 00 00 00 00 00 00  07 00 00 00 0c 00 00 00   |XO..............|
0xab8:    00 00 00 00 00 00 00 00  60 4f 00 00 00 00 00 00   |........`O......|
0xac8:    07 00 00 00 0e 00 00 00  00 00 00 00 00 00 00 00   |................|
0xad8:    68 4f 00 00 00 00 00 00  07 00 00 00 10 00 00 00   |hO..............|
0xae8:    00 00 00 00 00 00 00 00  70 4f 00 00 00 00 00 00   |........pO......|
0xaf8:    07 00 00 00 11 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb08:    78 4f 00 00 00 00 00 00  07 00 00 00 12 00 00 00   |xO..............|
0xb18:    00 00 00 00 00 00 00 00  80 4f 00 00 00 00 00 00   |.........O......|
0xb28:    07 00 00 00 13 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb38:    88 4f 00 00 00 00 00 00  07 00 00 00 14 00 00 00   |.O..............|
0xb48:    00 00 00 00 00 00 00 00  90 4f 00 00 00 00 00 00   |.........O......|
0xb58:    07 00 00 00 15 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb68:    98 4f 00 00 00 00 00 00  07 00 00 00 16 00 00 00   |.O..............|
0xb78:    00 00 00 00 00 00 00 00  a0 4f 00 00 00 00 00 00   |.........O......|
0xb88:    07 00 00 00 17 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb98:    a8 4f 00 00 00 00 00 00  07 00 00 00 18 00 00 00   |.O..............|
0xba8:    00 00 00 00 00 00 00 00  b0 4f 00 00 00 00 00 00   |.........O......|
0xbb8:    07 00 00 00 19 00 00 00  00 00 00 00 00 00 00 00   |................|
0xbc8:    b8 4f 00 00 00 00 00 00  07 00 00 00 1a 00 00 00   |.O..............|
0xbd8:    00 00 00 00 00 00 00 00  c0 4f 00 00 00 00 00 00   |.........O......|
0xbe8:    07 00 00 00 1b 00 00 00  00 00 00 00 00 00 00 00   |................|
0xbf8:    c8 4f 00 00 00 00 00 00  07 00 00 00 1d 00 00 00   |.O..............|
0xc08:    00 00 00 00 00 00 00 00  d0 4f 00 00 00 00 00 00   |.........O......|
0xc18:    07 00 00 00 1e 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc28:    ??                                                 |?               |
; section: .rodata
0x3000:   01 00 02 00 00 00 00 00  61 00                     |........a.      |
0x300a:   65 72 72 6f 72 5f 47 4c  00                        |error_GL.       |   "error_GL"
0x3013:   00 00 00 00 00                                     |.....           |
0x3018:   4e 75 6d 62 65 72 20 6f  66 20 70 61 72 61 6d 65   |Number of parame|   "Number of parameters is incorrect!\n"
0x3028:   74 65 72 73 20 69 73 20  69 6e 63 6f 72 72 65 63   |ters is incorrec|
0x3038:   74 21 0a 00                                        |t!..            |
0x303c:   00 00 00 00                                        |....            |
0x3040:   47 6f 61 6c 69 65 20 70  72 6f 63 65 73 73 20 69   |Goalie process i|   "Goalie process identification is wrong!\n"
0x3050:   64 65 6e 74 69 66 69 63  61 74 69 6f 6e 20 69 73   |dentification is|
0x3060:   20 77 72 6f 6e 67 21 0a  00                        | wrong!..       |
0x3069:   77 00 2e 00                                        |w...            |
0x306d:   65 72 72 6f 72 20 6f 6e  20 67 65 6e 65 72 61 74   |error on generat|   "error on generating the key"
0x307d:   69 6e 67 20 74 68 65 20  6b 65 79 00               |ing the key.    |
0x3089:   00 00 00 00 00 00 00                               |.......         |
0x3090:   65 72 72 6f 72 20 6f 6e  20 63 6f 6e 6e 65 63 74   |error on connect|   "error on connecting to the semaphore set"
0x30a0:   69 6e 67 20 74 6f 20 74  68 65 20 73 65 6d 61 70   |ing to the semap|
0x30b0:   68 6f 72 65 20 73 65 74  00                        |hore set.       |
0x30b9:   00 00 00 00 00 00 00                               |.......         |
0x30c0:   65 72 72 6f 72 20 6f 6e  20 63 6f 6e 6e 65 63 74   |error on connect|   "error on connecting to the shared memory region"
0x30d0:   69 6e 67 20 74 6f 20 74  68 65 20 73 68 61 72 65   |ing to the share|
0x30e0:   64 20 6d 65 6d 6f 72 79  20 72 65 67 69 6f 6e 00   |d memory region.|
0x30f0:   65 72 72 6f 72 20 6f 6e  20 6d 61 70 70 69 6e 67   |error on mapping|   "error on mapping the shared region on the process address space"
0x3100:   20 74 68 65 20 73 68 61  72 65 64 20 72 65 67 69   | the shared regi|
0x3110:   6f 6e 20 6f 6e 20 74 68  65 20 70 72 6f 63 65 73   |on on the proces|
0x3120:   73 20 61 64 64 72 65 73  73 20 73 70 61 63 65 00   |s address space.|
0x3130:   65 72 72 6f 72 20 6f 6e  20 75 6e 6d 61 70 70 69   |error on unmappi|   "error on unmapping the shared region off the process address space"
0x3140:   6e 67 20 74 68 65 20 73  68 61 72 65 64 20 72 65   |ng the shared re|
0x3150:   67 69 6f 6e 20 6f 66 66  20 74 68 65 20 70 72 6f   |gion off the pro|
0x3160:   63 65 73 73 20 61 64 64  72 65 73 73 20 73 70 61   |cess address spa|
0x3170:   63 65 00                                           |ce.             |
0x3173:   00 00 00 00 00                                     |.....           |
0x3178:   65 72 72 6f 72 20 6f 6e  20 74 68 65 20 75 70 20   |error on the up |   "error on the up operation for semaphore access (GL)"
0x3188:   6f 70 65 72 61 74 69 6f  6e 20 66 6f 72 20 73 65   |operation for se|
0x3198:   6d 61 70 68 6f 72 65 20  61 63 63 65 73 73 20 28   |maphore access (|
0x31a8:   47 4c 29 00                                        |GL).            |
0x31ac:   00 00 00 00                                        |....            |
0x31b0:   65 72 72 6f 72 20 6f 6e  20 74 68 65 20 64 6f 77   |error on the dow|   "error on the down operation for semaphore access (GL)"
0x31c0:   6e 20 6f 70 65 72 61 74  69 6f 6e 20 66 6f 72 20   |n operation for |
0x31d0:   73 65 6d 61 70 68 6f 72  65 20 61 63 63 65 73 73   |semaphore access|
0x31e0:   20 28 47 4c 29 00                                  | (GL).          |
0x31e6:   00 00 00 00 00 00 00 00  69 40 00 00 00 00 00 00   |........i@......|
0x31f6:   e0 41 00 00 00 00 00 00  4e 40                     |.A......N@      |
0x3200:   73 65 6d 61 70 68 6f 72  65 2e 63 00               |semaphore.c.    |   "semaphore.c"
0x320c:   73 69 6e 64 65 78 3e 30  00                        |sindex>0.       |   "sindex>0"
0x3215:   00 00 00                                           |...             |
0x3218:   73 65 6d 44 6f 77 6e 00                            |semDown.        |   "semDown"
0x3220:   73 65 6d 55 70 00                                  |semUp.          |   "semUp"
0x3226:   00 00                                              |..              |
0x3228:   25 64 20 6f 70 65 6e 69  6e 67 20 6c 6f 67 20 25   |%d opening log %|   "%d opening log %s %s\n"
0x3238:   73 20 25 73 0a 00                                  |s %s..          |
0x323e:   65 72 72 6f 72 20 6f 6e  20 6f 70 65 6e 69 6e 67   |error on opening|   "error on opening log file"
0x324e:   20 6c 6f 67 20 66 69 6c  65 00                     | log file.      |
0x3258:   65 72 72 6f 72 20 6f 6e  20 63 6c 6f 73 69 6e 67   |error on closing|   "error on closing of log file"
0x3268:   20 6f 66 20 6c 6f 67 20  66 69 6c 65 00            | of log file.   |
0x3275:   50 00                                              |P.              |
0x3277:   20 25 73 25 30 32 64 00                            | %s%02d.        |   " %s%02d"
0x327f:   47 00 52 00 77 00 00 00  00                        |G.R.w....       |
0x3288:   25 32 31 63 53 6f 63 63  65 72 47 61 6d 65 20 2d   |%21cSoccerGame -|   "%21cSoccerGame - Description of the internal state\n\n"
0x3298:   20 44 65 73 63 72 69 70  74 69 6f 6e 20 6f 66 20   | Description of |
0x32a8:   74 68 65 20 69 6e 74 65  72 6e 61 6c 20 73 74 61   |the internal sta|
0x32b8:   74 65 0a 0a 00                                     |te...           |
0x32bd:   61 00                                              |a.              |
0x32bf:   25 34 63 00                                        |%4c.            |   "%4c"
0x32c3:   ??                                                 |?               |
; section: .eh_frame_hdr
0x32c4:   01 1b 03 3b e0 00 00 00  1b 00 00 00 5c dd ff ff   |...;........\...|
0x32d4:   14 01 00 00 0c df ff ff  3c 01 00 00 1c df ff ff   |........<.......|
0x32e4:   54 01 00 00 bc e0 ff ff  fc 00 00 00 a5 e1 ff ff   |T...............|
0x32f4:   6c 01 00 00 07 e4 ff ff  8c 01 00 00 ee e4 ff ff   |l...............|
0x3304:   ac 01 00 00 57 e7 ff ff  cc 01 00 00 43 e8 ff ff   |....W.......C...|
0x3314:   ec 01 00 00 16 e9 ff ff  0c 02 00 00 3f e9 ff ff   |............?...|
0x3324:   2c 02 00 00 64 e9 ff ff  4c 02 00 00 89 e9 ff ff   |,...d...L.......|
0x3334:   6c 02 00 00 d4 e9 ff ff  8c 02 00 00 f2 e9 ff ff   |l...............|
0x3344:   ac 02 00 00 1f ea ff ff  cc 02 00 00 c0 ea ff ff   |................|
0x3354:   ec 02 00 00 ef ea ff ff  0c 03 00 00 4b eb ff ff   |............K...|
0x3364:   2c 03 00 00 d6 eb ff ff  4c 03 00 00 61 ec ff ff   |,.......L...a...|
0x3374:   6c 03 00 00 04 ed ff ff  8c 03 00 00 65 ed ff ff   |l...........e...|
0x3384:   ac 03 00 00 5e ee ff ff  cc 03 00 00 c8 ee ff ff   |....^...........|
0x3394:   ec 03 00 00 dc ef ff ff  0c 04 00 00 4c f0 ff ff   |............L...|
0x33a4:   54 04 00 00 14                                     |T....           |
; section: .eh_frame
0x33a8:   14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x33b8:   1b 0c 07 08 90 01 00 00  14 00 00 00 1c 00 00 00   |................|
0x33c8:   b8 df ff ff 2f 00 00 00  00 44 07 10 00 00 00 00   |..../....D......|
0x33d8:   24 00 00 00 34 00 00 00  40 dc ff ff b0 01 00 00   |$...4...@.......|
0x33e8:   00 0e 10 46 0e 18 4a 0f  0b 77 08 80 00 3f 1a 3a   |...F..J..w...?.:|
0x33f8:   2a 33 24 22 00 00 00 00  14 00 00 00 5c 00 00 00   |*3$"........\...|
0x3408:   c8 dd ff ff 10 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3418:   14 00 00 00 74 00 00 00  c0 dd ff ff a0 01 00 00   |....t...........|
0x3428:   00 00 00 00 00 00 00 00  1c 00 00 00 8c 00 00 00   |................|
0x3438:   31 e0 ff ff 62 02 00 00  00 45 0e 10 86 02 43 0d   |1...b....E....C.|
0x3448:   06 03 59 02 0c 07 08 00  1c 00 00 00 ac 00 00 00   |..Y.............|
0x3458:   73 e2 ff ff e7 00 00 00  00 45 0e 10 86 02 43 0d   |s........E....C.|
0x3468:   06 02 de 0c 07 08 00 00  1c 00 00 00 cc 00 00 00   |................|
0x3478:   3a e3 ff ff 69 02 00 00  00 45 0e 10 86 02 43 0d   |:...i....E....C.|
0x3488:   06 03 60 02 0c 07 08 00  1c 00 00 00 ec 00 00 00   |..`.............|
0x3498:   83 e5 ff ff ec 00 00 00  00 45 0e 10 86 02 43 0d   |.........E....C.|
0x34a8:   06 02 e3 0c 07 08 00 00  1c 00 00 00 0c 01 00 00   |................|
0x34b8:   4f e6 ff ff d3 00 00 00  00 45 0e 10 86 02 43 0d   |O........E....C.|
0x34c8:   06 02 ca 0c 07 08 00 00  1c 00 00 00 2c 01 00 00   |............,...|
0x34d8:   02 e7 ff ff 29 00 00 00  00 45 0e 10 86 02 43 0d   |....)....E....C.|
0x34e8:   06 60 0c 07 08 00 00 00  1c 00 00 00 4c 01 00 00   |.`..........L...|
0x34f8:   0b e7 ff ff 25 00 00 00  00 45 0e 10 86 02 43 0d   |....%....E....C.|
0x3508:   06 5c 0c 07 08 00 00 00  1c 00 00 00 6c 01 00 00   |.\..........l...|
0x3518:   10 e7 ff ff 25 00 00 00  00 45 0e 10 86 02 43 0d   |....%....E....C.|
0x3528:   06 5c 0c 07 08 00 00 00  1c 00 00 00 8c 01 00 00   |.\..............|
0x3538:   15 e7 ff ff 4b 00 00 00  00 45 0e 10 86 02 43 0d   |....K....E....C.|
0x3548:   06 02 42 0c 07 08 00 00  1c 00 00 00 ac 01 00 00   |..B.............|
0x3558:   40 e7 ff ff 1e 00 00 00  00 45 0e 10 86 02 43 0d   |@........E....C.|
0x3568:   06 55 0c 07 08 00 00 00  1c 00 00 00 cc 01 00 00   |.U..............|
0x3578:   3e e7 ff ff 2d 00 00 00  00 45 0e 10 86 02 43 0d   |>...-....E....C.|
0x3588:   06 64 0c 07 08 00 00 00  1c 00 00 00 ec 01 00 00   |.d..............|
0x3598:   4b e7 ff ff a1 00 00 00  00 45 0e 10 86 02 43 0d   |K........E....C.|
0x35a8:   06 02 98 0c 07 08 00 00  1c 00 00 00 0c 02 00 00   |................|
0x35b8:   cc e7 ff ff 2f 00 00 00  00 45 0e 10 86 02 43 0d   |..../....E....C.|
0x35c8:   06 66 0c 07 08 00 00 00  1c 00 00 00 2c 02 00 00   |.f..........,...|
0x35d8:   db e7 ff ff 5c 00 00 00  00 45 0e 10 86 02 43 0d   |....\....E....C.|
0x35e8:   06 02 53 0c 07 08 00 00  1c 00 00 00 4c 02 00 00   |..S.........L...|
0x35f8:   17 e8 ff ff 8b 00 00 00  00 45 0e 10 86 02 43 0d   |.........E....C.|
0x3608:   06 02 82 0c 07 08 00 00  1c 00 00 00 6c 02 00 00   |............l...|
0x3618:   82 e8 ff ff 8b 00 00 00  00 45 0e 10 86 02 43 0d   |.........E....C.|
0x3628:   06 02 82 0c 07 08 00 00  1c 00 00 00 8c 02 00 00   |................|
0x3638:   ed e8 ff ff a3 00 00 00  00 45 0e 10 86 02 43 0d   |.........E....C.|
0x3648:   06 02 9a 0c 07 08 00 00  1c 00 00 00 ac 02 00 00   |................|
0x3658:   70 e9 ff ff 61 00 00 00  00 45 0e 10 86 02 43 0d   |p...a....E....C.|
0x3668:   06 02 58 0c 07 08 00 00  1c 00 00 00 cc 02 00 00   |..X.............|
0x3678:   b1 e9 ff ff f9 00 00 00  00 45 0e 10 86 02 43 0d   |.........E....C.|
0x3688:   06 02 f0 0c 07 08 00 00  1c 00 00 00 ec 02 00 00   |................|
0x3698:   8a ea ff ff 6a 00 00 00  00 45 0e 10 86 02 43 0d   |....j....E....C.|
0x36a8:   06 02 61 0c 07 08 00 00  1c 00 00 00 0c 03 00 00   |..a.............|
0x36b8:   d4 ea ff ff 0d 01 00 00  00 45 0e 10 86 02 43 0d   |.........E....C.|
0x36c8:   06 03 04 01 0c 07 08 00  44 00 00 00 2c 03 00 00   |........D...,...|
0x36d8:   c8 eb ff ff 65 00 00 00  00 46 0e 10 8f 02 49 0e   |....e....F....I.|
0x36e8:   18 8e 03 45 0e 20 8d 04  45 0e 28 8c 05 44 0e 30   |...E. ..E.(..D.0|
0x36f8:   86 06 48 0e 38 83 07 47  0e 40 6e 0e 38 41 0e 30   |..H.8..G.@n.8A.0|
0x3708:   41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x3718:   10 00 00 00 74 03 00 00  f0 eb ff ff 05 00 00 00   |....t...........|
0x3728:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x4cf0:   60 14 00 00 00 00 00 00  20                        |`.......        |
; section: .fini_array
0x4cf8:   20 14 00 00 00 00 00 00  01                        | ........       |
; section: .dynamic
0x4d00:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x4d10:   0c 00 00 00 00 00 00 00  00 10 00 00 00 00 00 00   |................|
0x4d20:   0d 00 00 00 00 00 00 00  18 23 00 00 00 00 00 00   |.........#......|
0x4d30:   19 00 00 00 00 00 00 00  f0 4c 00 00 00 00 00 00   |.........L......|
0x4d40:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x4d50:   1a 00 00 00 00 00 00 00  f8 4c 00 00 00 00 00 00   |.........L......|
0x4d60:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x4d70:   f5 fe ff 6f 00 00 00 00  a0 03 00 00 00 00 00 00   |...o............|
0x4d80:   05 00 00 00 00 00 00 00  00 07 00 00 00 00 00 00   |................|
0x4d90:   06 00 00 00 00 00 00 00  d0 03 00 00 00 00 00 00   |................|
0x4da0:   0a 00 00 00 00 00 00 00  4f 01 00 00 00 00 00 00   |........O.......|
0x4db0:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x4dc0:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4dd0:   03 00 00 00 00 00 00 00  f0 4e 00 00 00 00 00 00   |.........N......|
0x4de0:   02 00 00 00 00 00 00 00  70 02 00 00 00 00 00 00   |........p.......|
0x4df0:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x4e00:   17 00 00 00 00 00 00 00  b8 09 00 00 00 00 00 00   |................|
0x4e10:   07 00 00 00 00 00 00 00  c8 08 00 00 00 00 00 00   |................|
0x4e20:   08 00 00 00 00 00 00 00  f0 00 00 00 00 00 00 00   |................|
0x4e30:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x4e40:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x4e50:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x4e60:   fe ff ff 6f 00 00 00 00  98 08 00 00 00 00 00 00   |...o............|
0x4e70:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x4e80:   f0 ff ff 6f 00 00 00 00  50 08 00 00 00 00 00 00   |...o....P.......|
0x4e90:   f9 ff ff 6f 00 00 00 00  03 00 00 00 00 00 00 00   |...o............|
0x4ea0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4eb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ec0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ed0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ee0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ef0:   00                                                 |.               |
; section: .got
0x4ef0:   00 4d 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |.M..............|
0x4f00:   00 00 00 00 00 00 00 00  30 10 00 00 00 00 00 00   |........0.......|
0x4f10:   40 10 00 00 00 00 00 00  50 10 00 00 00 00 00 00   |@.......P.......|
0x4f20:   60 10 00 00 00 00 00 00  70 10 00 00 00 00 00 00   |`.......p.......|
0x4f30:   80 10 00 00 00 00 00 00  90 10 00 00 00 00 00 00   |................|
0x4f40:   a0 10 00 00 00 00 00 00  b0 10 00 00 00 00 00 00   |................|
0x4f50:   c0 10 00 00 00 00 00 00  d0 10 00 00 00 00 00 00   |................|
0x4f60:   e0 10 00 00 00 00 00 00  f0 10 00 00 00 00 00 00   |................|
0x4f70:   00 11 00 00 00 00 00 00  10 11 00 00 00 00 00 00   |................|
0x4f80:   20 11 00 00 00 00 00 00  30 11 00 00 00 00 00 00   | .......0.......|
0x4f90:   40 11 00 00 00 00 00 00  50 11 00 00 00 00 00 00   |@.......P.......|
0x4fa0:   60 11 00 00 00 00 00 00  70 11 00 00 00 00 00 00   |`.......p.......|
0x4fb0:   80 11 00 00 00 00 00 00  90 11 00 00 00 00 00 00   |................|
0x4fc0:   a0 11 00 00 00 00 00 00  b0 11 00 00 00 00 00 00   |................|
0x4fd0:   c0 11 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4fe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4ff0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5000:   00                                                 |.               |
; section: .data
0x5000:   00 00 00 00 00 00 00 00  08 50 00 00 00 00 00 00   |.........P......|
0x5010:   ??                                                 |?               |
